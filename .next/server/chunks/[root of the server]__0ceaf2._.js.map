{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 151, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/duzur/Downloads/Voxindiav3/config/db.js"],"sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nlet cached = global.mongoose\r\n\r\nif (!cached) {\r\n    cached = global.mongoose = { conn: null, promise: null }\r\n}\r\n\r\nasync function connectDB() {\r\n    \r\n    if (cached.conn) {\r\n        return cached.conn\r\n    } \r\n\r\n    if (!cached.promise) {\r\n        const opts = {\r\n            bufferCommands:false\r\n        }\r\n\r\n        cached.promise = mongoose.connect(`${process.env.MONGODB_URI}/Voxindia`,opts).then( mongoose => {\r\n            return mongoose\r\n        })\r\n\r\n    } \r\n\r\n    cached.conn = await cached.promise\r\n    return cached.conn\r\n\r\n}\r\n\r\nexport default connectDB"],"names":[],"mappings":";;;AAAA;;AAEA,IAAI,SAAS,OAAO,QAAQ;AAE5B,IAAI,CAAC,QAAQ;IACT,SAAS,OAAO,QAAQ,GAAG;QAAE,MAAM;QAAM,SAAS;IAAK;AAC3D;AAEA,eAAe;IAEX,IAAI,OAAO,IAAI,EAAE;QACb,OAAO,OAAO,IAAI;IACtB;IAEA,IAAI,CAAC,OAAO,OAAO,EAAE;QACjB,MAAM,OAAO;YACT,gBAAe;QACnB;QAEA,OAAO,OAAO,GAAG,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,GAAG,QAAQ,GAAG,CAAC,WAAW,CAAC,UAAU,CAAC,EAAC,MAAM,IAAI,CAAE,CAAA;YACjF,OAAO;QACX;IAEJ;IAEA,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;IAClC,OAAO,OAAO,IAAI;AAEtB;uCAEe"}},
    {"offset": {"line": 179, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 185, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/duzur/Downloads/Voxindiav3/models/User.js"],"sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst userSchema = new mongoose.Schema({\r\n    _id: { type: String, required: true },\r\n    name: { type: String, required: true },\r\n    email: { type: String, required: true, unique: true },\r\n    imageUrl: { type: String, required: true },\r\n    cartItems: { type: Object, default: {} }\r\n}, { minimize: false })\r\n\r\nconst User = mongoose.models.user || mongoose.model('user',userSchema)\r\n\r\nexport default User"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,aAAa,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC;IACnC,KAAK;QAAE,MAAM;QAAQ,UAAU;IAAK;IACpC,MAAM;QAAE,MAAM;QAAQ,UAAU;IAAK;IACrC,OAAO;QAAE,MAAM;QAAQ,UAAU;QAAM,QAAQ;IAAK;IACpD,UAAU;QAAE,MAAM;QAAQ,UAAU;IAAK;IACzC,WAAW;QAAE,MAAM;QAAQ,SAAS,CAAC;IAAE;AAC3C,GAAG;IAAE,UAAU;AAAM;AAErB,MAAM,OAAO,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,QAAO;uCAE5C"}},
    {"offset": {"line": 217, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 223, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/duzur/Downloads/Voxindiav3/models/Order.js"],"sourcesContent":["import mongoose from \"mongoose\";\r\n\r\n\r\nconst orderSchema = new mongoose.Schema({\r\n    userId: { type: String, required: true, ref: 'user' },\r\n    items: [{\r\n        product: { type: String, required: true, ref: 'product' },\r\n        quantity: { type: Number, required: true }\r\n    }],\r\n    amount: { type: Number, required: true },\r\n    address: { type: String, ref: 'address', required: true },\r\n    status: { type: String, required: true, default: 'Order Placed' },\r\n    date: { type: Number, required: true },\r\n})\r\n\r\nconst Order = mongoose.models.order || mongoose.model('order', orderSchema)\r\n\r\nexport default Order"],"names":[],"mappings":";;;AAAA;;AAGA,MAAM,cAAc,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC;IACpC,QAAQ;QAAE,MAAM;QAAQ,UAAU;QAAM,KAAK;IAAO;IACpD,OAAO;QAAC;YACJ,SAAS;gBAAE,MAAM;gBAAQ,UAAU;gBAAM,KAAK;YAAU;YACxD,UAAU;gBAAE,MAAM;gBAAQ,UAAU;YAAK;QAC7C;KAAE;IACF,QAAQ;QAAE,MAAM;QAAQ,UAAU;IAAK;IACvC,SAAS;QAAE,MAAM;QAAQ,KAAK;QAAW,UAAU;IAAK;IACxD,QAAQ;QAAE,MAAM;QAAQ,UAAU;QAAM,SAAS;IAAe;IAChE,MAAM;QAAE,MAAM;QAAQ,UAAU;IAAK;AACzC;AAEA,MAAM,QAAQ,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,KAAK,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,SAAS;uCAEhD"}},
    {"offset": {"line": 268, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 274, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/duzur/Downloads/Voxindiav3/config/inngest.js"],"sourcesContent":["import { Inngest } from \"inngest\";\r\nimport connectDB from \"./db\";\r\nimport User from \"@/models/User\";\r\nimport Order from \"@/models/Order\";\r\n\r\n// Create a client to send and receive events\r\nexport const inngest = new Inngest({ id: \"Voxindia-next\" });\r\n\r\n// Inngest Function to save user data to a database\r\nexport const syncUserCreation = inngest.createFunction(\r\n    {\r\n        id: 'sync-user-from-clerk'\r\n    },\r\n    { event: 'clerk/user.created' },\r\n    async ({ event }) => {\r\n        const { id, first_name, last_name, email_addresses, image_url } = event.data\r\n        const userData = {\r\n            _id: id,\r\n            email: email_addresses[0].email_address,\r\n            name: first_name + ' ' + last_name,\r\n            imageUrl: image_url\r\n        }\r\n        await connectDB()\r\n        await User.create(userData)\r\n    }\r\n)\r\n\r\n// Inngest Function to update user data in database \r\nexport const syncUserUpdation = inngest.createFunction(\r\n    {\r\n        id: 'update-user-from-clerk'\r\n    },\r\n    { event: 'clerk/user.updated' },\r\n    async ({event}) => {\r\n        const { id, first_name, last_name, email_addresses, image_url } = event.data\r\n        const userData = {\r\n            _id: id,\r\n            email: email_addresses[0].email_address,\r\n            name: first_name + ' ' + last_name,\r\n            imageUrl: image_url\r\n        }\r\n        await connectDB()\r\n        await User.findByIdAndUpdate(id,userData)\r\n    }\r\n)\r\n\r\n// Inngest Function to delete user from database\r\nexport const syncUserDeletion = inngest.createFunction(\r\n    {\r\n        id: 'delete-user-with-clerk'\r\n    },\r\n    { event: 'clerk/user.deleted' },\r\n    async ({event}) => {\r\n        \r\n        const {id } = event.data\r\n\r\n        await connectDB()\r\n        await User.findByIdAndDelete(id)\r\n    }\r\n)\r\n\r\n// Inngest Function to create user's order in database\r\nexport const createUserOrder = inngest.createFunction(\r\n    {\r\n        id:'create-user-order',\r\n        batchEvents: {\r\n            maxSize: 5,\r\n            timeout: '5s'\r\n        }\r\n    },\r\n    {event: 'order/created'},\r\n    async ({events}) => {\r\n        \r\n        const orders = events.map((event)=> {\r\n            return {\r\n                userId: event.data.userId,\r\n                items: event.data.items,\r\n                amount: event.data.amount,\r\n                address: event.data.address,\r\n                date : event.data.date\r\n            }\r\n        })\r\n\r\n        await connectDB()\r\n        await Order.insertMany(orders)\r\n\r\n        return { success: true, processed: orders.length };\r\n\r\n    }\r\n)"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;;;;;AAGO,MAAM,UAAU,IAAI,kIAAA,CAAA,UAAO,CAAC;IAAE,IAAI;AAAiB;AAGnD,MAAM,mBAAmB,QAAQ,cAAc,CAClD;IACI,IAAI;AACR,GACA;IAAE,OAAO;AAAqB,GAC9B,OAAO,EAAE,KAAK,EAAE;IACZ,MAAM,EAAE,EAAE,EAAE,UAAU,EAAE,SAAS,EAAE,eAAe,EAAE,SAAS,EAAE,GAAG,MAAM,IAAI;IAC5E,MAAM,WAAW;QACb,KAAK;QACL,OAAO,eAAe,CAAC,EAAE,CAAC,aAAa;QACvC,MAAM,aAAa,MAAM;QACzB,UAAU;IACd;IACA,MAAM,CAAA,GAAA,8GAAA,CAAA,UAAS,AAAD;IACd,MAAM,gHAAA,CAAA,UAAI,CAAC,MAAM,CAAC;AACtB;AAIG,MAAM,mBAAmB,QAAQ,cAAc,CAClD;IACI,IAAI;AACR,GACA;IAAE,OAAO;AAAqB,GAC9B,OAAO,EAAC,KAAK,EAAC;IACV,MAAM,EAAE,EAAE,EAAE,UAAU,EAAE,SAAS,EAAE,eAAe,EAAE,SAAS,EAAE,GAAG,MAAM,IAAI;IAC5E,MAAM,WAAW;QACb,KAAK;QACL,OAAO,eAAe,CAAC,EAAE,CAAC,aAAa;QACvC,MAAM,aAAa,MAAM;QACzB,UAAU;IACd;IACA,MAAM,CAAA,GAAA,8GAAA,CAAA,UAAS,AAAD;IACd,MAAM,gHAAA,CAAA,UAAI,CAAC,iBAAiB,CAAC,IAAG;AACpC;AAIG,MAAM,mBAAmB,QAAQ,cAAc,CAClD;IACI,IAAI;AACR,GACA;IAAE,OAAO;AAAqB,GAC9B,OAAO,EAAC,KAAK,EAAC;IAEV,MAAM,EAAC,EAAE,EAAE,GAAG,MAAM,IAAI;IAExB,MAAM,CAAA,GAAA,8GAAA,CAAA,UAAS,AAAD;IACd,MAAM,gHAAA,CAAA,UAAI,CAAC,iBAAiB,CAAC;AACjC;AAIG,MAAM,kBAAkB,QAAQ,cAAc,CACjD;IACI,IAAG;IACH,aAAa;QACT,SAAS;QACT,SAAS;IACb;AACJ,GACA;IAAC,OAAO;AAAe,GACvB,OAAO,EAAC,MAAM,EAAC;IAEX,MAAM,SAAS,OAAO,GAAG,CAAC,CAAC;QACvB,OAAO;YACH,QAAQ,MAAM,IAAI,CAAC,MAAM;YACzB,OAAO,MAAM,IAAI,CAAC,KAAK;YACvB,QAAQ,MAAM,IAAI,CAAC,MAAM;YACzB,SAAS,MAAM,IAAI,CAAC,OAAO;YAC3B,MAAO,MAAM,IAAI,CAAC,IAAI;QAC1B;IACJ;IAEA,MAAM,CAAA,GAAA,8GAAA,CAAA,UAAS,AAAD;IACd,MAAM,iHAAA,CAAA,UAAK,CAAC,UAAU,CAAC;IAEvB,OAAO;QAAE,SAAS;QAAM,WAAW,OAAO,MAAM;IAAC;AAErD"}},
    {"offset": {"line": 356, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 362, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/duzur/Downloads/Voxindiav3/models/Product.js"],"sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst productSchema = new mongoose.Schema({\r\n  userId: { type: String, required: true },\r\n  name: { type: String, required: true },\r\n  description: { type: String, required: true },\r\n  price: { type: Number, required: true },\r\n  offerPrice: { type: Number },\r\n  perSqFtPrice: { type: Number },\r\n  perPanelSqFt: { type: Number },\r\n  image: [{ type: String, required: true }], // array of image URLs\r\n  category: { type: String, required: true },\r\n  date: { type: Number, default: Date.now },\r\n  variants: [\r\n    {\r\n      name: { type: String },\r\n      colors: [\r\n        {\r\n          name: { type: String },\r\n          price: { type: Number },\r\n          image: { type: String }, // URL string\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n});\r\n\r\nconst Product = mongoose.models.product || mongoose.model(\"product\", productSchema);\r\n\r\nexport default Product;\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,gBAAgB,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC;IACxC,QAAQ;QAAE,MAAM;QAAQ,UAAU;IAAK;IACvC,MAAM;QAAE,MAAM;QAAQ,UAAU;IAAK;IACrC,aAAa;QAAE,MAAM;QAAQ,UAAU;IAAK;IAC5C,OAAO;QAAE,MAAM;QAAQ,UAAU;IAAK;IACtC,YAAY;QAAE,MAAM;IAAO;IAC3B,cAAc;QAAE,MAAM;IAAO;IAC7B,cAAc;QAAE,MAAM;IAAO;IAC7B,OAAO;QAAC;YAAE,MAAM;YAAQ,UAAU;QAAK;KAAE;IACzC,UAAU;QAAE,MAAM;QAAQ,UAAU;IAAK;IACzC,MAAM;QAAE,MAAM;QAAQ,SAAS,KAAK,GAAG;IAAC;IACxC,UAAU;QACR;YACE,MAAM;gBAAE,MAAM;YAAO;YACrB,QAAQ;gBACN;oBACE,MAAM;wBAAE,MAAM;oBAAO;oBACrB,OAAO;wBAAE,MAAM;oBAAO;oBACtB,OAAO;wBAAE,MAAM;oBAAO;gBACxB;aACD;QACH;KACD;AACH;AAEA,MAAM,UAAU,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,OAAO,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,WAAW;uCAEtD"}},
    {"offset": {"line": 430, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 452, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/duzur/Downloads/Voxindiav3/app/api/order/create/route.js"],"sourcesContent":["import { inngest } from \"@/config/inngest\";\r\nimport Product from \"@/models/Product\";\r\nimport User from \"@/models/User\";\r\nimport { getAuth } from \"@clerk/nextjs/server\";\r\nimport { NextResponse } from \"next/server\";\r\nimport crypto from \"crypto\";\r\n\r\nexport async function POST(request) {\r\n  try {\r\n    const { userId } = getAuth(request);\r\n    if (!userId) return NextResponse.json({ success: false, message: \"Unauthorized\" });\r\n\r\n    const {\r\n      address,\r\n      items,\r\n      payment_id,\r\n      razorpay_order_id,\r\n      signature,\r\n      payment_mode, // optional: if COD\r\n    } = await request.json();\r\n\r\n    if (!address || items.length === 0) {\r\n      return NextResponse.json({ success: false, message: \"Invalid data\" });\r\n    }\r\n\r\n    // Calculate amount using product info\r\n    const amount = await items.reduce(async (accPromise, item) => {\r\n      const acc = await accPromise;\r\n      const product = await Product.findById(item.product);\r\n      if (!product) throw new Error(\"Invalid product\");\r\n      return acc + product.offerPrice * item.quantity;\r\n    }, Promise.resolve(0));\r\n\r\n    const totalAmount = amount + Math.floor(amount * 0.02);\r\n\r\n    // 🧾 Verify Razorpay payment if not COD\r\n    if (payment_mode !== \"COD\") {\r\n      const expectedSignature = crypto\r\n        .createHmac(\"sha256\", process.env.RAZORPAY_SECRET)\r\n        .update(`${razorpay_order_id}|${payment_id}`)\r\n        .digest(\"hex\");\r\n\r\n      if (expectedSignature !== signature) {\r\n        return NextResponse.json({ success: false, message: \"Payment verification failed\" });\r\n      }\r\n    }\r\n\r\n    // 🚀 Trigger Inngest for order creation\r\n    await inngest.send({\r\n      name: \"order/created\",\r\n      data: {\r\n        userId,\r\n        address,\r\n        items,\r\n        amount: totalAmount,\r\n        paymentMode: payment_mode || \"Razorpay\",\r\n        paymentId: payment_id || null,\r\n        date: Date.now(),\r\n      },\r\n    });\r\n\r\n    // 🧹 Clear cart\r\n    const user = await User.findById(userId);\r\n    if (user) {\r\n      user.cartItems = {};\r\n      await user.save();\r\n    }\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      message: payment_mode === \"COD\" ? \"COD Order Placed\" : \"Payment verified & order placed\",\r\n    });\r\n  } catch (error) {\r\n    console.log(\"ORDER ERROR:\", error);\r\n    return NextResponse.json({ success: false, message: error.message });\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AAEA;AACA;AAFA;;;;;;;AAIO,eAAe,KAAK,OAAO;IAChC,IAAI;QACF,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,6KAAA,CAAA,UAAO,AAAD,EAAE;QAC3B,IAAI,CAAC,QAAQ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAO,SAAS;QAAe;QAEhF,MAAM,EACJ,OAAO,EACP,KAAK,EACL,UAAU,EACV,iBAAiB,EACjB,SAAS,EACT,YAAY,EACb,GAAG,MAAM,QAAQ,IAAI;QAEtB,IAAI,CAAC,WAAW,MAAM,MAAM,KAAK,GAAG;YAClC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;gBAAO,SAAS;YAAe;QACrE;QAEA,sCAAsC;QACtC,MAAM,SAAS,MAAM,MAAM,MAAM,CAAC,OAAO,YAAY;YACnD,MAAM,MAAM,MAAM;YAClB,MAAM,UAAU,MAAM,mHAAA,CAAA,UAAO,CAAC,QAAQ,CAAC,KAAK,OAAO;YACnD,IAAI,CAAC,SAAS,MAAM,IAAI,MAAM;YAC9B,OAAO,MAAM,QAAQ,UAAU,GAAG,KAAK,QAAQ;QACjD,GAAG,QAAQ,OAAO,CAAC;QAEnB,MAAM,cAAc,SAAS,KAAK,KAAK,CAAC,SAAS;QAEjD,wCAAwC;QACxC,IAAI,iBAAiB,OAAO;YAC1B,MAAM,oBAAoB,qGAAA,CAAA,UAAM,CAC7B,UAAU,CAAC,UAAU,QAAQ,GAAG,CAAC,eAAe,EAChD,MAAM,CAAC,GAAG,kBAAkB,CAAC,EAAE,YAAY,EAC3C,MAAM,CAAC;YAEV,IAAI,sBAAsB,WAAW;gBACnC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;oBAAE,SAAS;oBAAO,SAAS;gBAA8B;YACpF;QACF;QAEA,wCAAwC;QACxC,MAAM,mHAAA,CAAA,UAAO,CAAC,IAAI,CAAC;YACjB,MAAM;YACN,MAAM;gBACJ;gBACA;gBACA;gBACA,QAAQ;gBACR,aAAa,gBAAgB;gBAC7B,WAAW,cAAc;gBACzB,MAAM,KAAK,GAAG;YAChB;QACF;QAEA,gBAAgB;QAChB,MAAM,OAAO,MAAM,gHAAA,CAAA,UAAI,CAAC,QAAQ,CAAC;QACjC,IAAI,MAAM;YACR,KAAK,SAAS,GAAG,CAAC;YAClB,MAAM,KAAK,IAAI;QACjB;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,SAAS,iBAAiB,QAAQ,qBAAqB;QACzD;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,GAAG,CAAC,gBAAgB;QAC5B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAO,SAAS,MAAM,OAAO;QAAC;IACpE;AACF"}},
    {"offset": {"line": 530, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}