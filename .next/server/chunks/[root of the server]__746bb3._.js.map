{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/duzur/Downloads/QuickCartv3/config/db.js"],"sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nlet cached = global.mongoose\r\n\r\nif (!cached) {\r\n    cached = global.mongoose = { conn: null, promise: null }\r\n}\r\n\r\nasync function connectDB() {\r\n    \r\n    if (cached.conn) {\r\n        return cached.conn\r\n    } \r\n\r\n    if (!cached.promise) {\r\n        const opts = {\r\n            bufferCommands:false\r\n        }\r\n\r\n        cached.promise = mongoose.connect(`${process.env.MONGODB_URI}/quickcart`,opts).then( mongoose => {\r\n            return mongoose\r\n        })\r\n\r\n    } \r\n\r\n    cached.conn = await cached.promise\r\n    return cached.conn\r\n\r\n}\r\n\r\nexport default connectDB"],"names":[],"mappings":";;;AAAA;;AAEA,IAAI,SAAS,OAAO,QAAQ;AAE5B,IAAI,CAAC,QAAQ;IACT,SAAS,OAAO,QAAQ,GAAG;QAAE,MAAM;QAAM,SAAS;IAAK;AAC3D;AAEA,eAAe;IAEX,IAAI,OAAO,IAAI,EAAE;QACb,OAAO,OAAO,IAAI;IACtB;IAEA,IAAI,CAAC,OAAO,OAAO,EAAE;QACjB,MAAM,OAAO;YACT,gBAAe;QACnB;QAEA,OAAO,OAAO,GAAG,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,GAAG,QAAQ,GAAG,CAAC,WAAW,CAAC,UAAU,CAAC,EAAC,MAAM,IAAI,CAAE,CAAA;YACjF,OAAO;QACX;IAEJ;IAEA,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;IAClC,OAAO,OAAO,IAAI;AAEtB;uCAEe"}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/duzur/Downloads/QuickCartv3/models/User.js"],"sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst userSchema = new mongoose.Schema({\r\n    _id: { type: String, required: true },\r\n    name: { type: String, required: true },\r\n    email: { type: String, required: true, unique: true },\r\n    imageUrl: { type: String, required: true },\r\n    cartItems: { type: Object, default: {} }\r\n}, { minimize: false })\r\n\r\nconst User = mongoose.models.user || mongoose.model('user',userSchema)\r\n\r\nexport default User"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,aAAa,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC;IACnC,KAAK;QAAE,MAAM;QAAQ,UAAU;IAAK;IACpC,MAAM;QAAE,MAAM;QAAQ,UAAU;IAAK;IACrC,OAAO;QAAE,MAAM;QAAQ,UAAU;QAAM,QAAQ;IAAK;IACpD,UAAU;QAAE,MAAM;QAAQ,UAAU;IAAK;IACzC,WAAW;QAAE,MAAM;QAAQ,SAAS,CAAC;IAAE;AAC3C,GAAG;IAAE,UAAU;AAAM;AAErB,MAAM,OAAO,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,QAAO;uCAE5C"}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 151, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/duzur/Downloads/QuickCartv3/app/api/user/data/route.js"],"sourcesContent":["import connectDB from \"@/config/db\";\r\nimport User from \"@/models/User\";\r\nimport { getAuth } from \"@clerk/nextjs/server\";\r\nimport { NextResponse } from \"next/server\";\r\n\r\n\r\nexport async function GET(request) {\r\n    \r\n    try {\r\n        \r\n        const { userId } = getAuth(request)\r\n\r\n        await connectDB()\r\n        const user = await User.findById(userId)\r\n\r\n        if (!user) {\r\n            return NextResponse.json({ success: false, message: \"User Not Found\" })\r\n        }\r\n\r\n        return NextResponse.json({success:true, user})\r\n\r\n    } catch (error) {\r\n        return NextResponse.json({ success: false, message: error.message })\r\n    }\r\n\r\n}"],"names":[],"mappings":";;;AAAA;AACA;AAEA;AADA;;;;;AAIO,eAAe,IAAI,OAAO;IAE7B,IAAI;QAEA,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,6KAAA,CAAA,UAAO,AAAD,EAAE;QAE3B,MAAM,CAAA,GAAA,8GAAA,CAAA,UAAS,AAAD;QACd,MAAM,OAAO,MAAM,gHAAA,CAAA,UAAI,CAAC,QAAQ,CAAC;QAEjC,IAAI,CAAC,MAAM;YACP,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;gBAAO,SAAS;YAAiB;QACzE;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAC,SAAQ;YAAM;QAAI;IAEhD,EAAE,OAAO,OAAO;QACZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAO,SAAS,MAAM,OAAO;QAAC;IACtE;AAEJ"}},
    {"offset": {"line": 184, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}