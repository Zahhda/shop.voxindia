{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/duzur/Downloads/QuickCartv3/lib/authSeller.js"],"sourcesContent":["import { clerkClient } from '@clerk/nextjs/server';\r\nimport { NextResponse } from 'next/server';\r\n\r\nconst authSeller = async (userId) => {\r\n    try {\r\n\r\n        const client = await clerkClient()\r\n        const user = await client.users.getUser(userId)\r\n\r\n        if (user.publicMetadata.role === 'seller') {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    } catch (error) {\r\n        return NextResponse.json({ success: false, message: error.message });\r\n    }\r\n}\r\n\r\nexport default authSeller;"],"names":[],"mappings":";;;AACA;AADA;;;AAGA,MAAM,aAAa,OAAO;IACtB,IAAI;QAEA,MAAM,SAAS,MAAM,CAAA,GAAA,2KAAA,CAAA,cAAW,AAAD;QAC/B,MAAM,OAAO,MAAM,OAAO,KAAK,CAAC,OAAO,CAAC;QAExC,IAAI,KAAK,cAAc,CAAC,IAAI,KAAK,UAAU;YACvC,OAAO;QACX,OAAO;YACH,OAAO;QACX;IACJ,EAAE,OAAO,OAAO;QACZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAO,SAAS,MAAM,OAAO;QAAC;IACtE;AACJ;uCAEe"}},
    {"offset": {"line": 159, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 173, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/duzur/Downloads/QuickCartv3/config/db.js"],"sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nlet cached = global.mongoose\r\n\r\nif (!cached) {\r\n    cached = global.mongoose = { conn: null, promise: null }\r\n}\r\n\r\nasync function connectDB() {\r\n    \r\n    if (cached.conn) {\r\n        return cached.conn\r\n    } \r\n\r\n    if (!cached.promise) {\r\n        const opts = {\r\n            bufferCommands:false\r\n        }\r\n\r\n        cached.promise = mongoose.connect(`${process.env.MONGODB_URI}/quickcart`,opts).then( mongoose => {\r\n            return mongoose\r\n        })\r\n\r\n    } \r\n\r\n    cached.conn = await cached.promise\r\n    return cached.conn\r\n\r\n}\r\n\r\nexport default connectDB"],"names":[],"mappings":";;;AAAA;;AAEA,IAAI,SAAS,OAAO,QAAQ;AAE5B,IAAI,CAAC,QAAQ;IACT,SAAS,OAAO,QAAQ,GAAG;QAAE,MAAM;QAAM,SAAS;IAAK;AAC3D;AAEA,eAAe;IAEX,IAAI,OAAO,IAAI,EAAE;QACb,OAAO,OAAO,IAAI;IACtB;IAEA,IAAI,CAAC,OAAO,OAAO,EAAE;QACjB,MAAM,OAAO;YACT,gBAAe;QACnB;QAEA,OAAO,OAAO,GAAG,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,GAAG,QAAQ,GAAG,CAAC,WAAW,CAAC,UAAU,CAAC,EAAC,MAAM,IAAI,CAAE,CAAA;YACjF,OAAO;QACX;IAEJ;IAEA,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;IAClC,OAAO,OAAO,IAAI;AAEtB;uCAEe"}},
    {"offset": {"line": 201, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/duzur/Downloads/QuickCartv3/models/Product.js"],"sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst productSchema = new mongoose.Schema({\r\n  userId: { type: String, required: true },\r\n  name: { type: String, required: true },\r\n  description: { type: String, required: true },\r\n  price: { type: Number, required: true },\r\n  offerPrice: { type: Number },\r\n  perSqFtPrice: { type: Number },\r\n  perPanelSqFt: { type: Number },\r\n  image: [{ type: String, required: true }], // array of image URLs\r\n  category: { type: String, required: true },\r\n  date: { type: Number, default: Date.now },\r\n  variants: [\r\n    {\r\n      name: { type: String },\r\n      colors: [\r\n        {\r\n          name: { type: String },\r\n          price: { type: Number },\r\n          image: { type: String }, // URL string\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n});\r\n\r\nconst Product = mongoose.models.product || mongoose.model(\"product\", productSchema);\r\n\r\nexport default Product;\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,gBAAgB,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC;IACxC,QAAQ;QAAE,MAAM;QAAQ,UAAU;IAAK;IACvC,MAAM;QAAE,MAAM;QAAQ,UAAU;IAAK;IACrC,aAAa;QAAE,MAAM;QAAQ,UAAU;IAAK;IAC5C,OAAO;QAAE,MAAM;QAAQ,UAAU;IAAK;IACtC,YAAY;QAAE,MAAM;IAAO;IAC3B,cAAc;QAAE,MAAM;IAAO;IAC7B,cAAc;QAAE,MAAM;IAAO;IAC7B,OAAO;QAAC;YAAE,MAAM;YAAQ,UAAU;QAAK;KAAE;IACzC,UAAU;QAAE,MAAM;QAAQ,UAAU;IAAK;IACzC,MAAM;QAAE,MAAM;QAAQ,SAAS,KAAK,GAAG;IAAC;IACxC,UAAU;QACR;YACE,MAAM;gBAAE,MAAM;YAAO;YACrB,QAAQ;gBACN;oBACE,MAAM;wBAAE,MAAM;oBAAO;oBACrB,OAAO;wBAAE,MAAM;oBAAO;oBACtB,OAAO;wBAAE,MAAM;oBAAO;gBACxB;aACD;QACH;KACD;AACH;AAEA,MAAM,UAAU,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,OAAO,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,WAAW;uCAEtD"}},
    {"offset": {"line": 275, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 281, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/duzur/Downloads/QuickCartv3/app/api/product/add/route.js"],"sourcesContent":["import { v2 as cloudinary } from \"cloudinary\";\r\nimport { getAuth } from \"@clerk/nextjs/server\";\r\nimport authSeller from \"@/lib/authSeller\";\r\nimport { NextResponse } from \"next/server\";\r\nimport connectDB from \"@/config/db\";\r\nimport Product from \"@/models/Product\";\r\n\r\n// Configure Cloudinary\r\ncloudinary.config({\r\n  cloud_name: process.env.CLOUDINARY_CLOUD_NAME,\r\n  api_key: process.env.CLOUDINARY_API_KEY,\r\n  api_secret: process.env.CLOUDINARY_API_SECRET,\r\n});\r\n\r\nexport async function POST(request) {\r\n  try {\r\n    const { userId } = getAuth(request);\r\n\r\n    if (!userId) return NextResponse.json({ success: false, message: \"Not authorized\" });\r\n\r\n    const isSeller = await authSeller(userId);\r\n    if (!isSeller) return NextResponse.json({ success: false, message: \"Not authorized\" });\r\n\r\n    const formData = await request.formData();\r\n\r\n    const name = formData.get(\"name\");\r\n    const description = formData.get(\"description\");\r\n    const category = formData.get(\"category\");\r\n    const price = formData.get(\"price\");\r\n    const offerPrice = formData.get(\"offerPrice\");\r\n    const perSqFtPrice = formData.get(\"perSqFtPrice\");\r\n    const perPanelSqFt = formData.get(\"perPanelSqFt\");\r\n\r\n    const variantsRaw = formData.get(\"variants\");\r\n    let variants = [];\r\n    if (variantsRaw) variants = JSON.parse(variantsRaw);\r\n\r\n    // Upload main images (multiple files under 'images')\r\n    const mainImageFiles = formData.getAll(\"images\");\r\n    const mainImageUrls = [];\r\n    for (const file of mainImageFiles) {\r\n      if (!file) continue;\r\n      const arrayBuffer = await file.arrayBuffer();\r\n      const buffer = Buffer.from(arrayBuffer);\r\n      const uploadResult = await new Promise((resolve, reject) => {\r\n        const stream = cloudinary.uploader.upload_stream(\r\n          { resource_type: \"image\" },\r\n          (error, result) => {\r\n            if (error) reject(error);\r\n            else resolve(result);\r\n          }\r\n        );\r\n        stream.end(buffer);\r\n      });\r\n      mainImageUrls.push(uploadResult.secure_url);\r\n    }\r\n\r\n    // Upload variant color images\r\n    // Each color image file name is in form variant{vIndex}-color{cIndex}\r\n    for (let vIndex = 0; vIndex < variants.length; vIndex++) {\r\n      for (let cIndex = 0; cIndex < variants[vIndex].colors.length; cIndex++) {\r\n        const fieldName = `variant${vIndex}-color${cIndex}`;\r\n        const file = formData.get(fieldName);\r\n        if (file) {\r\n          const arrayBuffer = await file.arrayBuffer();\r\n          const buffer = Buffer.from(arrayBuffer);\r\n          const uploadResult = await new Promise((resolve, reject) => {\r\n            const stream = cloudinary.uploader.upload_stream(\r\n              { resource_type: \"image\" },\r\n              (error, result) => {\r\n                if (error) reject(error);\r\n                else resolve(result);\r\n              }\r\n            );\r\n            stream.end(buffer);\r\n          });\r\n          variants[vIndex].colors[cIndex].image = uploadResult.secure_url;\r\n          variants[vIndex].colors[cIndex].price = Number(variants[vIndex].colors[cIndex].price);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Save product to DB\r\n    await connectDB();\r\n    const newProduct = await Product.create({\r\n      userId,\r\n      name,\r\n      description,\r\n      category,\r\n      price: Number(price),\r\n      offerPrice: Number(offerPrice),\r\n      perSqFtPrice: Number(perSqFtPrice),\r\n      perPanelSqFt: Number(perPanelSqFt),\r\n      image: mainImageUrls,\r\n      variants,\r\n      date: Date.now(),\r\n    });\r\n\r\n    return NextResponse.json({ success: true, message: \"Product added successfully\", newProduct });\r\n  } catch (error) {\r\n    return NextResponse.json({ success: false, message: error.message || \"Failed to add product\" });\r\n  }\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 393, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}