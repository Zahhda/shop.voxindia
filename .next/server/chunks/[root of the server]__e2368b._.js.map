{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/duzur/Downloads/QuickCartv3/config/db.js"],"sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nlet cached = global.mongoose\r\n\r\nif (!cached) {\r\n    cached = global.mongoose = { conn: null, promise: null }\r\n}\r\n\r\nasync function connectDB() {\r\n    \r\n    if (cached.conn) {\r\n        return cached.conn\r\n    } \r\n\r\n    if (!cached.promise) {\r\n        const opts = {\r\n            bufferCommands:false\r\n        }\r\n\r\n        cached.promise = mongoose.connect(`${process.env.MONGODB_URI}/quickcart`,opts).then( mongoose => {\r\n            return mongoose\r\n        })\r\n\r\n    } \r\n\r\n    cached.conn = await cached.promise\r\n    return cached.conn\r\n\r\n}\r\n\r\nexport default connectDB"],"names":[],"mappings":";;;AAAA;;AAEA,IAAI,SAAS,OAAO,QAAQ;AAE5B,IAAI,CAAC,QAAQ;IACT,SAAS,OAAO,QAAQ,GAAG;QAAE,MAAM;QAAM,SAAS;IAAK;AAC3D;AAEA,eAAe;IAEX,IAAI,OAAO,IAAI,EAAE;QACb,OAAO,OAAO,IAAI;IACtB;IAEA,IAAI,CAAC,OAAO,OAAO,EAAE;QACjB,MAAM,OAAO;YACT,gBAAe;QACnB;QAEA,OAAO,OAAO,GAAG,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,GAAG,QAAQ,GAAG,CAAC,WAAW,CAAC,UAAU,CAAC,EAAC,MAAM,IAAI,CAAE,CAAA;YACjF,OAAO;QACX;IAEJ;IAEA,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;IAClC,OAAO,OAAO,IAAI;AAEtB;uCAEe"}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/duzur/Downloads/QuickCartv3/models/Address.js"],"sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst addressSchema = new mongoose.Schema({\r\n    userId: { type: String, required: true },\r\n    fullName: { type: String, required: true },\r\n    phoneNumber: { type: String, required: true },\r\n    pincode: { type: Number, required: true },\r\n    area: { type: String, required: true },\r\n    city: { type: String, required: true },\r\n    state: { type: String, required: true },\r\n})\r\n\r\nconst Address = mongoose.models.address || mongoose.model('address',addressSchema)\r\n\r\nexport default Address"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,gBAAgB,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC;IACtC,QAAQ;QAAE,MAAM;QAAQ,UAAU;IAAK;IACvC,UAAU;QAAE,MAAM;QAAQ,UAAU;IAAK;IACzC,aAAa;QAAE,MAAM;QAAQ,UAAU;IAAK;IAC5C,SAAS;QAAE,MAAM;QAAQ,UAAU;IAAK;IACxC,MAAM;QAAE,MAAM;QAAQ,UAAU;IAAK;IACrC,MAAM;QAAE,MAAM;QAAQ,UAAU;IAAK;IACrC,OAAO;QAAE,MAAM;QAAQ,UAAU;IAAK;AAC1C;AAEA,MAAM,UAAU,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,OAAO,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,WAAU;uCAErD"}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/duzur/Downloads/QuickCartv3/app/api/user/add-address/route.js"],"sourcesContent":["import connectDB from \"@/config/db\"\r\nimport Address from \"@/models/Address\"\r\nimport { getAuth } from \"@clerk/nextjs/server\"\r\nimport { NextResponse } from \"next/server\"\r\n\r\nexport async function POST(request) {\r\n    try {\r\n        \r\n        const { userId } = getAuth(request)\r\n        const {address} = await request.json()\r\n\r\n        await connectDB()\r\n        const newAddress = await Address.create({...address,userId})\r\n\r\n        return NextResponse.json({ success: true, message: \"Address added successfully\", newAddress })\r\n\r\n    } catch (error) {\r\n        return NextResponse.json({ success: false, message: error.message });\r\n    }\r\n}"],"names":[],"mappings":";;;AAAA;AACA;AAEA;AADA;;;;;AAGO,eAAe,KAAK,OAAO;IAC9B,IAAI;QAEA,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,6KAAA,CAAA,UAAO,AAAD,EAAE;QAC3B,MAAM,EAAC,OAAO,EAAC,GAAG,MAAM,QAAQ,IAAI;QAEpC,MAAM,CAAA,GAAA,8GAAA,CAAA,UAAS,AAAD;QACd,MAAM,aAAa,MAAM,mHAAA,CAAA,UAAO,CAAC,MAAM,CAAC;YAAC,GAAG,OAAO;YAAC;QAAM;QAE1D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAM,SAAS;YAA8B;QAAW;IAEhG,EAAE,OAAO,OAAO;QACZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAO,SAAS,MAAM,OAAO;QAAC;IACtE;AACJ"}},
    {"offset": {"line": 188, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}