{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/duzur/Downloads/Voxindiav3/node_modules/%40bufbuild/protobuf/dist/cjs/wire/varint.js"],"sourcesContent":["\"use strict\";\n// Copyright 2008 Google Inc.  All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n//\n// Code generated by the Protocol Buffer compiler is owned by the owner\n// of the input file used when generating it.  This code is not\n// standalone and requires a support library to be linked with it.  This\n// support library is itself covered by the above license.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.varint64read = varint64read;\nexports.varint64write = varint64write;\nexports.int64FromString = int64FromString;\nexports.int64ToString = int64ToString;\nexports.uInt64ToString = uInt64ToString;\nexports.varint32write = varint32write;\nexports.varint32read = varint32read;\n/* eslint-disable prefer-const,@typescript-eslint/restrict-plus-operands */\n/**\n * Read a 64 bit varint as two JS numbers.\n *\n * Returns tuple:\n * [0]: low bits\n * [1]: high bits\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/buffer_decoder.js#L175\n */\nfunction varint64read() {\n    let lowBits = 0;\n    let highBits = 0;\n    for (let shift = 0; shift < 28; shift += 7) {\n        let b = this.buf[this.pos++];\n        lowBits |= (b & 0x7f) << shift;\n        if ((b & 0x80) == 0) {\n            this.assertBounds();\n            return [lowBits, highBits];\n        }\n    }\n    let middleByte = this.buf[this.pos++];\n    // last four bits of the first 32 bit number\n    lowBits |= (middleByte & 0x0f) << 28;\n    // 3 upper bits are part of the next 32 bit number\n    highBits = (middleByte & 0x70) >> 4;\n    if ((middleByte & 0x80) == 0) {\n        this.assertBounds();\n        return [lowBits, highBits];\n    }\n    for (let shift = 3; shift <= 31; shift += 7) {\n        let b = this.buf[this.pos++];\n        highBits |= (b & 0x7f) << shift;\n        if ((b & 0x80) == 0) {\n            this.assertBounds();\n            return [lowBits, highBits];\n        }\n    }\n    throw new Error(\"invalid varint\");\n}\n/**\n * Write a 64 bit varint, given as two JS numbers, to the given bytes array.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/writer.js#L344\n */\nfunction varint64write(lo, hi, bytes) {\n    for (let i = 0; i < 28; i = i + 7) {\n        const shift = lo >>> i;\n        const hasNext = !(shift >>> 7 == 0 && hi == 0);\n        const byte = (hasNext ? shift | 0x80 : shift) & 0xff;\n        bytes.push(byte);\n        if (!hasNext) {\n            return;\n        }\n    }\n    const splitBits = ((lo >>> 28) & 0x0f) | ((hi & 0x07) << 4);\n    const hasMoreBits = !(hi >> 3 == 0);\n    bytes.push((hasMoreBits ? splitBits | 0x80 : splitBits) & 0xff);\n    if (!hasMoreBits) {\n        return;\n    }\n    for (let i = 3; i < 31; i = i + 7) {\n        const shift = hi >>> i;\n        const hasNext = !(shift >>> 7 == 0);\n        const byte = (hasNext ? shift | 0x80 : shift) & 0xff;\n        bytes.push(byte);\n        if (!hasNext) {\n            return;\n        }\n    }\n    bytes.push((hi >>> 31) & 0x01);\n}\n// constants for binary math\nconst TWO_PWR_32_DBL = 0x100000000;\n/**\n * Parse decimal string of 64 bit integer value as two JS numbers.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10\n */\nfunction int64FromString(dec) {\n    // Check for minus sign.\n    const minus = dec[0] === \"-\";\n    if (minus) {\n        dec = dec.slice(1);\n    }\n    // Work 6 decimal digits at a time, acting like we're converting base 1e6\n    // digits to binary. This is safe to do with floating point math because\n    // Number.isSafeInteger(ALL_32_BITS * 1e6) == true.\n    const base = 1e6;\n    let lowBits = 0;\n    let highBits = 0;\n    function add1e6digit(begin, end) {\n        // Note: Number('') is 0.\n        const digit1e6 = Number(dec.slice(begin, end));\n        highBits *= base;\n        lowBits = lowBits * base + digit1e6;\n        // Carry bits from lowBits to\n        if (lowBits >= TWO_PWR_32_DBL) {\n            highBits = highBits + ((lowBits / TWO_PWR_32_DBL) | 0);\n            lowBits = lowBits % TWO_PWR_32_DBL;\n        }\n    }\n    add1e6digit(-24, -18);\n    add1e6digit(-18, -12);\n    add1e6digit(-12, -6);\n    add1e6digit(-6);\n    return minus ? negate(lowBits, highBits) : newBits(lowBits, highBits);\n}\n/**\n * Losslessly converts a 64-bit signed integer in 32:32 split representation\n * into a decimal string.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10\n */\nfunction int64ToString(lo, hi) {\n    let bits = newBits(lo, hi);\n    // If we're treating the input as a signed value and the high bit is set, do\n    // a manual two's complement conversion before the decimal conversion.\n    const negative = bits.hi & 0x80000000;\n    if (negative) {\n        bits = negate(bits.lo, bits.hi);\n    }\n    const result = uInt64ToString(bits.lo, bits.hi);\n    return negative ? \"-\" + result : result;\n}\n/**\n * Losslessly converts a 64-bit unsigned integer in 32:32 split representation\n * into a decimal string.\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf-javascript/blob/a428c58273abad07c66071d9753bc4d1289de426/experimental/runtime/int64.js#L10\n */\nfunction uInt64ToString(lo, hi) {\n    ({ lo, hi } = toUnsigned(lo, hi));\n    // Skip the expensive conversion if the number is small enough to use the\n    // built-in conversions.\n    // Number.MAX_SAFE_INTEGER = 0x001FFFFF FFFFFFFF, thus any number with\n    // highBits <= 0x1FFFFF can be safely expressed with a double and retain\n    // integer precision.\n    // Proven by: Number.isSafeInteger(0x1FFFFF * 2**32 + 0xFFFFFFFF) == true.\n    if (hi <= 0x1fffff) {\n        return String(TWO_PWR_32_DBL * hi + lo);\n    }\n    // What this code is doing is essentially converting the input number from\n    // base-2 to base-1e7, which allows us to represent the 64-bit range with\n    // only 3 (very large) digits. Those digits are then trivial to convert to\n    // a base-10 string.\n    // The magic numbers used here are -\n    // 2^24 = 16777216 = (1,6777216) in base-1e7.\n    // 2^48 = 281474976710656 = (2,8147497,6710656) in base-1e7.\n    // Split 32:32 representation into 16:24:24 representation so our\n    // intermediate digits don't overflow.\n    const low = lo & 0xffffff;\n    const mid = ((lo >>> 24) | (hi << 8)) & 0xffffff;\n    const high = (hi >> 16) & 0xffff;\n    // Assemble our three base-1e7 digits, ignoring carries. The maximum\n    // value in a digit at this step is representable as a 48-bit integer, which\n    // can be stored in a 64-bit floating point number.\n    let digitA = low + mid * 6777216 + high * 6710656;\n    let digitB = mid + high * 8147497;\n    let digitC = high * 2;\n    // Apply carries from A to B and from B to C.\n    const base = 10000000;\n    if (digitA >= base) {\n        digitB += Math.floor(digitA / base);\n        digitA %= base;\n    }\n    if (digitB >= base) {\n        digitC += Math.floor(digitB / base);\n        digitB %= base;\n    }\n    // If digitC is 0, then we should have returned in the trivial code path\n    // at the top for non-safe integers. Given this, we can assume both digitB\n    // and digitA need leading zeros.\n    return (digitC.toString() +\n        decimalFrom1e7WithLeadingZeros(digitB) +\n        decimalFrom1e7WithLeadingZeros(digitA));\n}\nfunction toUnsigned(lo, hi) {\n    return { lo: lo >>> 0, hi: hi >>> 0 };\n}\nfunction newBits(lo, hi) {\n    return { lo: lo | 0, hi: hi | 0 };\n}\n/**\n * Returns two's compliment negation of input.\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Bitwise_Operators#Signed_32-bit_integers\n */\nfunction negate(lowBits, highBits) {\n    highBits = ~highBits;\n    if (lowBits) {\n        lowBits = ~lowBits + 1;\n    }\n    else {\n        // If lowBits is 0, then bitwise-not is 0xFFFFFFFF,\n        // adding 1 to that, results in 0x100000000, which leaves\n        // the low bits 0x0 and simply adds one to the high bits.\n        highBits += 1;\n    }\n    return newBits(lowBits, highBits);\n}\n/**\n * Returns decimal representation of digit1e7 with leading zeros.\n */\nconst decimalFrom1e7WithLeadingZeros = (digit1e7) => {\n    const partial = String(digit1e7);\n    return \"0000000\".slice(partial.length) + partial;\n};\n/**\n * Write a 32 bit varint, signed or unsigned. Same as `varint64write(0, value, bytes)`\n *\n * Copyright 2008 Google Inc.  All rights reserved.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/1b18833f4f2a2f681f4e4a25cdf3b0a43115ec26/js/binary/encoder.js#L144\n */\nfunction varint32write(value, bytes) {\n    if (value >= 0) {\n        // write value as varint 32\n        while (value > 0x7f) {\n            bytes.push((value & 0x7f) | 0x80);\n            value = value >>> 7;\n        }\n        bytes.push(value);\n    }\n    else {\n        for (let i = 0; i < 9; i++) {\n            bytes.push((value & 127) | 128);\n            value = value >> 7;\n        }\n        bytes.push(1);\n    }\n}\n/**\n * Read an unsigned 32 bit varint.\n *\n * See https://github.com/protocolbuffers/protobuf/blob/8a71927d74a4ce34efe2d8769fda198f52d20d12/js/experimental/runtime/kernel/buffer_decoder.js#L220\n */\nfunction varint32read() {\n    let b = this.buf[this.pos++];\n    let result = b & 0x7f;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7f) << 7;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7f) << 14;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    b = this.buf[this.pos++];\n    result |= (b & 0x7f) << 21;\n    if ((b & 0x80) == 0) {\n        this.assertBounds();\n        return result;\n    }\n    // Extract only last 4 bits\n    b = this.buf[this.pos++];\n    result |= (b & 0x0f) << 28;\n    for (let readBytes = 5; (b & 0x80) !== 0 && readBytes < 10; readBytes++)\n        b = this.buf[this.pos++];\n    if ((b & 0x80) != 0)\n        throw new Error(\"invalid varint\");\n    this.assertBounds();\n    // Result can have 32 bits, convert it to unsigned\n    return result >>> 0;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 330, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 335, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/duzur/Downloads/Voxindiav3/node_modules/%40bufbuild/protobuf/dist/cjs/proto-int64.js"],"sourcesContent":["\"use strict\";\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.protoInt64 = void 0;\nconst varint_js_1 = require(\"./wire/varint.js\");\n/**\n * Int64Support for the current environment.\n */\nexports.protoInt64 = makeInt64Support();\nfunction makeInt64Support() {\n    const dv = new DataView(new ArrayBuffer(8));\n    // note that Safari 14 implements BigInt, but not the DataView methods\n    const ok = typeof BigInt === \"function\" &&\n        typeof dv.getBigInt64 === \"function\" &&\n        typeof dv.getBigUint64 === \"function\" &&\n        typeof dv.setBigInt64 === \"function\" &&\n        typeof dv.setBigUint64 === \"function\" &&\n        (typeof process != \"object\" ||\n            typeof process.env != \"object\" ||\n            process.env.BUF_BIGINT_DISABLE !== \"1\");\n    if (ok) {\n        const MIN = BigInt(\"-9223372036854775808\"), MAX = BigInt(\"9223372036854775807\"), UMIN = BigInt(\"0\"), UMAX = BigInt(\"18446744073709551615\");\n        return {\n            zero: BigInt(0),\n            supported: true,\n            parse(value) {\n                const bi = typeof value == \"bigint\" ? value : BigInt(value);\n                if (bi > MAX || bi < MIN) {\n                    throw new Error(`invalid int64: ${value}`);\n                }\n                return bi;\n            },\n            uParse(value) {\n                const bi = typeof value == \"bigint\" ? value : BigInt(value);\n                if (bi > UMAX || bi < UMIN) {\n                    throw new Error(`invalid uint64: ${value}`);\n                }\n                return bi;\n            },\n            enc(value) {\n                dv.setBigInt64(0, this.parse(value), true);\n                return {\n                    lo: dv.getInt32(0, true),\n                    hi: dv.getInt32(4, true),\n                };\n            },\n            uEnc(value) {\n                dv.setBigInt64(0, this.uParse(value), true);\n                return {\n                    lo: dv.getInt32(0, true),\n                    hi: dv.getInt32(4, true),\n                };\n            },\n            dec(lo, hi) {\n                dv.setInt32(0, lo, true);\n                dv.setInt32(4, hi, true);\n                return dv.getBigInt64(0, true);\n            },\n            uDec(lo, hi) {\n                dv.setInt32(0, lo, true);\n                dv.setInt32(4, hi, true);\n                return dv.getBigUint64(0, true);\n            },\n        };\n    }\n    return {\n        zero: \"0\",\n        supported: false,\n        parse(value) {\n            if (typeof value != \"string\") {\n                value = value.toString();\n            }\n            assertInt64String(value);\n            return value;\n        },\n        uParse(value) {\n            if (typeof value != \"string\") {\n                value = value.toString();\n            }\n            assertUInt64String(value);\n            return value;\n        },\n        enc(value) {\n            if (typeof value != \"string\") {\n                value = value.toString();\n            }\n            assertInt64String(value);\n            return (0, varint_js_1.int64FromString)(value);\n        },\n        uEnc(value) {\n            if (typeof value != \"string\") {\n                value = value.toString();\n            }\n            assertUInt64String(value);\n            return (0, varint_js_1.int64FromString)(value);\n        },\n        dec(lo, hi) {\n            return (0, varint_js_1.int64ToString)(lo, hi);\n        },\n        uDec(lo, hi) {\n            return (0, varint_js_1.uInt64ToString)(lo, hi);\n        },\n    };\n}\nfunction assertInt64String(value) {\n    if (!/^-?[0-9]+$/.test(value)) {\n        throw new Error(\"invalid int64: \" + value);\n    }\n}\nfunction assertUInt64String(value) {\n    if (!/^[0-9]+$/.test(value)) {\n        throw new Error(\"invalid uint64: \" + value);\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 455, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 460, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/duzur/Downloads/Voxindiav3/node_modules/%40bufbuild/protobuf/dist/cjs/wire/text-encoding.js"],"sourcesContent":["\"use strict\";\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.configureTextEncoding = configureTextEncoding;\nexports.getTextEncoding = getTextEncoding;\nconst symbol = Symbol.for(\"@bufbuild/protobuf/text-encoding\");\n/**\n * Protobuf-ES requires the Text Encoding API to convert UTF-8 from and to\n * binary. This WHATWG API is widely available, but it is not part of the\n * ECMAScript standard. On runtimes where it is not available, use this\n * function to provide your own implementation.\n *\n * Note that the Text Encoding API does not provide a way to validate UTF-8.\n * Our implementation falls back to use encodeURIComponent().\n */\nfunction configureTextEncoding(textEncoding) {\n    globalThis[symbol] = textEncoding;\n}\nfunction getTextEncoding() {\n    if (globalThis[symbol] == undefined) {\n        const te = new globalThis.TextEncoder();\n        const td = new globalThis.TextDecoder();\n        globalThis[symbol] = {\n            encodeUtf8(text) {\n                return te.encode(text);\n            },\n            decodeUtf8(bytes) {\n                return td.decode(bytes);\n            },\n            checkUtf8(text) {\n                try {\n                    encodeURIComponent(text);\n                    return true;\n                }\n                catch (e) {\n                    return false;\n                }\n            },\n        };\n    }\n    return globalThis[symbol];\n}\n"],"names":[],"mappings":"AAAA;AACA,6CAA6C;AAC7C,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;AACjC,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,qBAAqB,GAAG;AAChC,QAAQ,eAAe,GAAG;AAC1B,MAAM,SAAS,OAAO,GAAG,CAAC;AAC1B;;;;;;;;CAQC,GACD,SAAS,sBAAsB,YAAY;IACvC,UAAU,CAAC,OAAO,GAAG;AACzB;AACA,SAAS;IACL,IAAI,UAAU,CAAC,OAAO,IAAI,WAAW;QACjC,MAAM,KAAK,IAAI,WAAW,WAAW;QACrC,MAAM,KAAK,IAAI,WAAW,WAAW;QACrC,UAAU,CAAC,OAAO,GAAG;YACjB,YAAW,IAAI;gBACX,OAAO,GAAG,MAAM,CAAC;YACrB;YACA,YAAW,KAAK;gBACZ,OAAO,GAAG,MAAM,CAAC;YACrB;YACA,WAAU,IAAI;gBACV,IAAI;oBACA,mBAAmB;oBACnB,OAAO;gBACX,EACA,OAAO,GAAG;oBACN,OAAO;gBACX;YACJ;QACJ;IACJ;IACA,OAAO,UAAU,CAAC,OAAO;AAC7B","ignoreList":[0]}},
    {"offset": {"line": 514, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 519, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/duzur/Downloads/Voxindiav3/node_modules/%40bufbuild/protobuf/dist/cjs/wire/binary-encoding.js"],"sourcesContent":["\"use strict\";\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BinaryReader = exports.BinaryWriter = exports.INT32_MIN = exports.INT32_MAX = exports.UINT32_MAX = exports.FLOAT32_MIN = exports.FLOAT32_MAX = exports.WireType = void 0;\nconst varint_js_1 = require(\"./varint.js\");\nconst proto_int64_js_1 = require(\"../proto-int64.js\");\nconst text_encoding_js_1 = require(\"./text-encoding.js\");\n/* eslint-disable prefer-const,no-case-declarations,@typescript-eslint/restrict-plus-operands */\n/**\n * Protobuf binary format wire types.\n *\n * A wire type provides just enough information to find the length of the\n * following value.\n *\n * See https://developers.google.com/protocol-buffers/docs/encoding#structure\n */\nvar WireType;\n(function (WireType) {\n    /**\n     * Used for int32, int64, uint32, uint64, sint32, sint64, bool, enum\n     */\n    WireType[WireType[\"Varint\"] = 0] = \"Varint\";\n    /**\n     * Used for fixed64, sfixed64, double.\n     * Always 8 bytes with little-endian byte order.\n     */\n    WireType[WireType[\"Bit64\"] = 1] = \"Bit64\";\n    /**\n     * Used for string, bytes, embedded messages, packed repeated fields\n     *\n     * Only repeated numeric types (types which use the varint, 32-bit,\n     * or 64-bit wire types) can be packed. In proto3, such fields are\n     * packed by default.\n     */\n    WireType[WireType[\"LengthDelimited\"] = 2] = \"LengthDelimited\";\n    /**\n     * Start of a tag-delimited aggregate, such as a proto2 group, or a message\n     * in editions with message_encoding = DELIMITED.\n     */\n    WireType[WireType[\"StartGroup\"] = 3] = \"StartGroup\";\n    /**\n     * End of a tag-delimited aggregate.\n     */\n    WireType[WireType[\"EndGroup\"] = 4] = \"EndGroup\";\n    /**\n     * Used for fixed32, sfixed32, float.\n     * Always 4 bytes with little-endian byte order.\n     */\n    WireType[WireType[\"Bit32\"] = 5] = \"Bit32\";\n})(WireType || (exports.WireType = WireType = {}));\n/**\n * Maximum value for a 32-bit floating point value (Protobuf FLOAT).\n */\nexports.FLOAT32_MAX = 3.4028234663852886e38;\n/**\n * Minimum value for a 32-bit floating point value (Protobuf FLOAT).\n */\nexports.FLOAT32_MIN = -3.4028234663852886e38;\n/**\n * Maximum value for an unsigned 32-bit integer (Protobuf UINT32, FIXED32).\n */\nexports.UINT32_MAX = 0xffffffff;\n/**\n * Maximum value for a signed 32-bit integer (Protobuf INT32, SFIXED32, SINT32).\n */\nexports.INT32_MAX = 0x7fffffff;\n/**\n * Minimum value for a signed 32-bit integer (Protobuf INT32, SFIXED32, SINT32).\n */\nexports.INT32_MIN = -0x80000000;\nclass BinaryWriter {\n    constructor(encodeUtf8 = (0, text_encoding_js_1.getTextEncoding)().encodeUtf8) {\n        this.encodeUtf8 = encodeUtf8;\n        /**\n         * Previous fork states.\n         */\n        this.stack = [];\n        this.chunks = [];\n        this.buf = [];\n    }\n    /**\n     * Return all bytes written and reset this writer.\n     */\n    finish() {\n        if (this.buf.length) {\n            this.chunks.push(new Uint8Array(this.buf)); // flush the buffer\n            this.buf = [];\n        }\n        let len = 0;\n        for (let i = 0; i < this.chunks.length; i++)\n            len += this.chunks[i].length;\n        let bytes = new Uint8Array(len);\n        let offset = 0;\n        for (let i = 0; i < this.chunks.length; i++) {\n            bytes.set(this.chunks[i], offset);\n            offset += this.chunks[i].length;\n        }\n        this.chunks = [];\n        return bytes;\n    }\n    /**\n     * Start a new fork for length-delimited data like a message\n     * or a packed repeated field.\n     *\n     * Must be joined later with `join()`.\n     */\n    fork() {\n        this.stack.push({ chunks: this.chunks, buf: this.buf });\n        this.chunks = [];\n        this.buf = [];\n        return this;\n    }\n    /**\n     * Join the last fork. Write its length and bytes, then\n     * return to the previous state.\n     */\n    join() {\n        // get chunk of fork\n        let chunk = this.finish();\n        // restore previous state\n        let prev = this.stack.pop();\n        if (!prev)\n            throw new Error(\"invalid state, fork stack empty\");\n        this.chunks = prev.chunks;\n        this.buf = prev.buf;\n        // write length of chunk as varint\n        this.uint32(chunk.byteLength);\n        return this.raw(chunk);\n    }\n    /**\n     * Writes a tag (field number and wire type).\n     *\n     * Equivalent to `uint32( (fieldNo << 3 | type) >>> 0 )`.\n     *\n     * Generated code should compute the tag ahead of time and call `uint32()`.\n     */\n    tag(fieldNo, type) {\n        return this.uint32(((fieldNo << 3) | type) >>> 0);\n    }\n    /**\n     * Write a chunk of raw bytes.\n     */\n    raw(chunk) {\n        if (this.buf.length) {\n            this.chunks.push(new Uint8Array(this.buf));\n            this.buf = [];\n        }\n        this.chunks.push(chunk);\n        return this;\n    }\n    /**\n     * Write a `uint32` value, an unsigned 32 bit varint.\n     */\n    uint32(value) {\n        assertUInt32(value);\n        // write value as varint 32, inlined for speed\n        while (value > 0x7f) {\n            this.buf.push((value & 0x7f) | 0x80);\n            value = value >>> 7;\n        }\n        this.buf.push(value);\n        return this;\n    }\n    /**\n     * Write a `int32` value, a signed 32 bit varint.\n     */\n    int32(value) {\n        assertInt32(value);\n        (0, varint_js_1.varint32write)(value, this.buf);\n        return this;\n    }\n    /**\n     * Write a `bool` value, a variant.\n     */\n    bool(value) {\n        this.buf.push(value ? 1 : 0);\n        return this;\n    }\n    /**\n     * Write a `bytes` value, length-delimited arbitrary data.\n     */\n    bytes(value) {\n        this.uint32(value.byteLength); // write length of chunk as varint\n        return this.raw(value);\n    }\n    /**\n     * Write a `string` value, length-delimited data converted to UTF-8 text.\n     */\n    string(value) {\n        let chunk = this.encodeUtf8(value);\n        this.uint32(chunk.byteLength); // write length of chunk as varint\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `float` value, 32-bit floating point number.\n     */\n    float(value) {\n        assertFloat32(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setFloat32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `double` value, a 64-bit floating point number.\n     */\n    double(value) {\n        let chunk = new Uint8Array(8);\n        new DataView(chunk.buffer).setFloat64(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `fixed32` value, an unsigned, fixed-length 32-bit integer.\n     */\n    fixed32(value) {\n        assertUInt32(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setUint32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `sfixed32` value, a signed, fixed-length 32-bit integer.\n     */\n    sfixed32(value) {\n        assertInt32(value);\n        let chunk = new Uint8Array(4);\n        new DataView(chunk.buffer).setInt32(0, value, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `sint32` value, a signed, zigzag-encoded 32-bit varint.\n     */\n    sint32(value) {\n        assertInt32(value);\n        // zigzag encode\n        value = ((value << 1) ^ (value >> 31)) >>> 0;\n        (0, varint_js_1.varint32write)(value, this.buf);\n        return this;\n    }\n    /**\n     * Write a `fixed64` value, a signed, fixed-length 64-bit integer.\n     */\n    sfixed64(value) {\n        let chunk = new Uint8Array(8), view = new DataView(chunk.buffer), tc = proto_int64_js_1.protoInt64.enc(value);\n        view.setInt32(0, tc.lo, true);\n        view.setInt32(4, tc.hi, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `fixed64` value, an unsigned, fixed-length 64 bit integer.\n     */\n    fixed64(value) {\n        let chunk = new Uint8Array(8), view = new DataView(chunk.buffer), tc = proto_int64_js_1.protoInt64.uEnc(value);\n        view.setInt32(0, tc.lo, true);\n        view.setInt32(4, tc.hi, true);\n        return this.raw(chunk);\n    }\n    /**\n     * Write a `int64` value, a signed 64-bit varint.\n     */\n    int64(value) {\n        let tc = proto_int64_js_1.protoInt64.enc(value);\n        (0, varint_js_1.varint64write)(tc.lo, tc.hi, this.buf);\n        return this;\n    }\n    /**\n     * Write a `sint64` value, a signed, zig-zag-encoded 64-bit varint.\n     */\n    sint64(value) {\n        let tc = proto_int64_js_1.protoInt64.enc(value), \n        // zigzag encode\n        sign = tc.hi >> 31, lo = (tc.lo << 1) ^ sign, hi = ((tc.hi << 1) | (tc.lo >>> 31)) ^ sign;\n        (0, varint_js_1.varint64write)(lo, hi, this.buf);\n        return this;\n    }\n    /**\n     * Write a `uint64` value, an unsigned 64-bit varint.\n     */\n    uint64(value) {\n        let tc = proto_int64_js_1.protoInt64.uEnc(value);\n        (0, varint_js_1.varint64write)(tc.lo, tc.hi, this.buf);\n        return this;\n    }\n}\nexports.BinaryWriter = BinaryWriter;\nclass BinaryReader {\n    constructor(buf, decodeUtf8 = (0, text_encoding_js_1.getTextEncoding)().decodeUtf8) {\n        this.decodeUtf8 = decodeUtf8;\n        this.varint64 = varint_js_1.varint64read; // dirty cast for `this`\n        /**\n         * Read a `uint32` field, an unsigned 32 bit varint.\n         */\n        this.uint32 = varint_js_1.varint32read;\n        this.buf = buf;\n        this.len = buf.length;\n        this.pos = 0;\n        this.view = new DataView(buf.buffer, buf.byteOffset, buf.byteLength);\n    }\n    /**\n     * Reads a tag - field number and wire type.\n     */\n    tag() {\n        let tag = this.uint32(), fieldNo = tag >>> 3, wireType = tag & 7;\n        if (fieldNo <= 0 || wireType < 0 || wireType > 5)\n            throw new Error(\"illegal tag: field no \" + fieldNo + \" wire type \" + wireType);\n        return [fieldNo, wireType];\n    }\n    /**\n     * Skip one element and return the skipped data.\n     *\n     * When skipping StartGroup, provide the tags field number to check for\n     * matching field number in the EndGroup tag.\n     */\n    skip(wireType, fieldNo) {\n        let start = this.pos;\n        switch (wireType) {\n            case WireType.Varint:\n                while (this.buf[this.pos++] & 0x80) {\n                    // ignore\n                }\n                break;\n            // eslint-disable-next-line\n            // @ts-expect-error TS7029: Fallthrough case in switch\n            case WireType.Bit64:\n                this.pos += 4;\n            // eslint-disable-next-line no-fallthrough\n            case WireType.Bit32:\n                this.pos += 4;\n                break;\n            case WireType.LengthDelimited:\n                let len = this.uint32();\n                this.pos += len;\n                break;\n            case WireType.StartGroup:\n                for (;;) {\n                    const [fn, wt] = this.tag();\n                    if (wt === WireType.EndGroup) {\n                        if (fieldNo !== undefined && fn !== fieldNo) {\n                            throw new Error(\"invalid end group tag\");\n                        }\n                        break;\n                    }\n                    this.skip(wt, fn);\n                }\n                break;\n            default:\n                throw new Error(\"cant skip wire type \" + wireType);\n        }\n        this.assertBounds();\n        return this.buf.subarray(start, this.pos);\n    }\n    /**\n     * Throws error if position in byte array is out of range.\n     */\n    assertBounds() {\n        if (this.pos > this.len)\n            throw new RangeError(\"premature EOF\");\n    }\n    /**\n     * Read a `int32` field, a signed 32 bit varint.\n     */\n    int32() {\n        return this.uint32() | 0;\n    }\n    /**\n     * Read a `sint32` field, a signed, zigzag-encoded 32-bit varint.\n     */\n    sint32() {\n        let zze = this.uint32();\n        // decode zigzag\n        return (zze >>> 1) ^ -(zze & 1);\n    }\n    /**\n     * Read a `int64` field, a signed 64-bit varint.\n     */\n    int64() {\n        return proto_int64_js_1.protoInt64.dec(...this.varint64());\n    }\n    /**\n     * Read a `uint64` field, an unsigned 64-bit varint.\n     */\n    uint64() {\n        return proto_int64_js_1.protoInt64.uDec(...this.varint64());\n    }\n    /**\n     * Read a `sint64` field, a signed, zig-zag-encoded 64-bit varint.\n     */\n    sint64() {\n        let [lo, hi] = this.varint64();\n        // decode zig zag\n        let s = -(lo & 1);\n        lo = ((lo >>> 1) | ((hi & 1) << 31)) ^ s;\n        hi = (hi >>> 1) ^ s;\n        return proto_int64_js_1.protoInt64.dec(lo, hi);\n    }\n    /**\n     * Read a `bool` field, a variant.\n     */\n    bool() {\n        let [lo, hi] = this.varint64();\n        return lo !== 0 || hi !== 0;\n    }\n    /**\n     * Read a `fixed32` field, an unsigned, fixed-length 32-bit integer.\n     */\n    fixed32() {\n        return this.view.getUint32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `sfixed32` field, a signed, fixed-length 32-bit integer.\n     */\n    sfixed32() {\n        return this.view.getInt32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `fixed64` field, an unsigned, fixed-length 64 bit integer.\n     */\n    fixed64() {\n        return proto_int64_js_1.protoInt64.uDec(this.sfixed32(), this.sfixed32());\n    }\n    /**\n     * Read a `fixed64` field, a signed, fixed-length 64-bit integer.\n     */\n    sfixed64() {\n        return proto_int64_js_1.protoInt64.dec(this.sfixed32(), this.sfixed32());\n    }\n    /**\n     * Read a `float` field, 32-bit floating point number.\n     */\n    float() {\n        return this.view.getFloat32((this.pos += 4) - 4, true);\n    }\n    /**\n     * Read a `double` field, a 64-bit floating point number.\n     */\n    double() {\n        return this.view.getFloat64((this.pos += 8) - 8, true);\n    }\n    /**\n     * Read a `bytes` field, length-delimited arbitrary data.\n     */\n    bytes() {\n        let len = this.uint32(), start = this.pos;\n        this.pos += len;\n        this.assertBounds();\n        return this.buf.subarray(start, start + len);\n    }\n    /**\n     * Read a `string` field, length-delimited data converted to UTF-8 text.\n     */\n    string() {\n        return this.decodeUtf8(this.bytes());\n    }\n}\nexports.BinaryReader = BinaryReader;\n/**\n * Assert a valid signed protobuf 32-bit integer as a number or string.\n */\nfunction assertInt32(arg) {\n    if (typeof arg == \"string\") {\n        arg = Number(arg);\n    }\n    else if (typeof arg != \"number\") {\n        throw new Error(\"invalid int32: \" + typeof arg);\n    }\n    if (!Number.isInteger(arg) ||\n        arg > exports.INT32_MAX ||\n        arg < exports.INT32_MIN)\n        throw new Error(\"invalid int32: \" + arg);\n}\n/**\n * Assert a valid unsigned protobuf 32-bit integer as a number or string.\n */\nfunction assertUInt32(arg) {\n    if (typeof arg == \"string\") {\n        arg = Number(arg);\n    }\n    else if (typeof arg != \"number\") {\n        throw new Error(\"invalid uint32: \" + typeof arg);\n    }\n    if (!Number.isInteger(arg) ||\n        arg > exports.UINT32_MAX ||\n        arg < 0)\n        throw new Error(\"invalid uint32: \" + arg);\n}\n/**\n * Assert a valid protobuf float value as a number or string.\n */\nfunction assertFloat32(arg) {\n    if (typeof arg == \"string\") {\n        const o = arg;\n        arg = Number(arg);\n        if (isNaN(arg) && o !== \"NaN\") {\n            throw new Error(\"invalid float32: \" + o);\n        }\n    }\n    else if (typeof arg != \"number\") {\n        throw new Error(\"invalid float32: \" + typeof arg);\n    }\n    if (Number.isFinite(arg) &&\n        (arg > exports.FLOAT32_MAX || arg < exports.FLOAT32_MIN))\n        throw new Error(\"invalid float32: \" + arg);\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 970, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 975, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/duzur/Downloads/Voxindiav3/node_modules/%40bufbuild/protobuf/dist/cjs/wire/base64-encoding.js"],"sourcesContent":["\"use strict\";\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.base64Decode = base64Decode;\nexports.base64Encode = base64Encode;\n/* eslint-disable @typescript-eslint/ban-ts-comment, @typescript-eslint/no-unnecessary-condition, prefer-const */\n/**\n * Decodes a base64 string to a byte array.\n *\n * - ignores white-space, including line breaks and tabs\n * - allows inner padding (can decode concatenated base64 strings)\n * - does not require padding\n * - understands base64url encoding:\n *   \"-\" instead of \"+\",\n *   \"_\" instead of \"/\",\n *   no padding\n */\nfunction base64Decode(base64Str) {\n    const table = getDecodeTable();\n    // estimate byte size, not accounting for inner padding and whitespace\n    let es = (base64Str.length * 3) / 4;\n    if (base64Str[base64Str.length - 2] == \"=\")\n        es -= 2;\n    else if (base64Str[base64Str.length - 1] == \"=\")\n        es -= 1;\n    let bytes = new Uint8Array(es), bytePos = 0, // position in byte array\n    groupPos = 0, // position in base64 group\n    b, // current byte\n    p = 0; // previous byte\n    for (let i = 0; i < base64Str.length; i++) {\n        b = table[base64Str.charCodeAt(i)];\n        if (b === undefined) {\n            switch (base64Str[i]) {\n                // @ts-expect-error TS7029: Fallthrough case in switch\n                case \"=\":\n                    groupPos = 0; // reset state when padding found\n                // eslint-disable-next-line no-fallthrough\n                case \"\\n\":\n                case \"\\r\":\n                case \"\\t\":\n                case \" \":\n                    continue; // skip white-space, and padding\n                default:\n                    throw Error(\"invalid base64 string\");\n            }\n        }\n        switch (groupPos) {\n            case 0:\n                p = b;\n                groupPos = 1;\n                break;\n            case 1:\n                bytes[bytePos++] = (p << 2) | ((b & 48) >> 4);\n                p = b;\n                groupPos = 2;\n                break;\n            case 2:\n                bytes[bytePos++] = ((p & 15) << 4) | ((b & 60) >> 2);\n                p = b;\n                groupPos = 3;\n                break;\n            case 3:\n                bytes[bytePos++] = ((p & 3) << 6) | b;\n                groupPos = 0;\n                break;\n        }\n    }\n    if (groupPos == 1)\n        throw Error(\"invalid base64 string\");\n    return bytes.subarray(0, bytePos);\n}\n/**\n * Encode a byte array to a base64 string.\n *\n * By default, this function uses the standard base64 encoding with padding.\n *\n * To encode without padding, use encoding = \"std_raw\".\n *\n * To encode with the URL encoding, use encoding = \"url\", which replaces the\n * characters +/ by their URL-safe counterparts -_, and omits padding.\n */\nfunction base64Encode(bytes, encoding = \"std\") {\n    const table = getEncodeTable(encoding);\n    const pad = encoding == \"std\";\n    let base64 = \"\", groupPos = 0, // position in base64 group\n    b, // current byte\n    p = 0; // carry over from previous byte\n    for (let i = 0; i < bytes.length; i++) {\n        b = bytes[i];\n        switch (groupPos) {\n            case 0:\n                base64 += table[b >> 2];\n                p = (b & 3) << 4;\n                groupPos = 1;\n                break;\n            case 1:\n                base64 += table[p | (b >> 4)];\n                p = (b & 15) << 2;\n                groupPos = 2;\n                break;\n            case 2:\n                base64 += table[p | (b >> 6)];\n                base64 += table[b & 63];\n                groupPos = 0;\n                break;\n        }\n    }\n    // add output padding\n    if (groupPos) {\n        base64 += table[p];\n        if (pad) {\n            base64 += \"=\";\n            if (groupPos == 1)\n                base64 += \"=\";\n        }\n    }\n    return base64;\n}\n// lookup table from base64 character to byte\nlet encodeTableStd;\nlet encodeTableUrl;\n// lookup table from base64 character *code* to byte because lookup by number is fast\nlet decodeTable;\nfunction getEncodeTable(encoding) {\n    if (!encodeTableStd) {\n        encodeTableStd =\n            \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".split(\"\");\n        encodeTableUrl = encodeTableStd.slice(0, -2).concat(\"-\", \"_\");\n    }\n    return encoding == \"url\" ? encodeTableUrl : encodeTableStd;\n}\nfunction getDecodeTable() {\n    if (!decodeTable) {\n        decodeTable = [];\n        const encodeTable = getEncodeTable(\"std\");\n        for (let i = 0; i < encodeTable.length; i++)\n            decodeTable[encodeTable[i].charCodeAt(0)] = i;\n        // support base64url variants\n        decodeTable[\"-\".charCodeAt(0)] = encodeTable.indexOf(\"+\");\n        decodeTable[\"_\".charCodeAt(0)] = encodeTable.indexOf(\"/\");\n    }\n    return decodeTable;\n}\n"],"names":[],"mappings":"AAAA;AACA,6CAA6C;AAC7C,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;AACjC,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,YAAY,GAAG;AACvB,QAAQ,YAAY,GAAG;AACvB,+GAA+G,GAC/G;;;;;;;;;;CAUC,GACD,SAAS,aAAa,SAAS;IAC3B,MAAM,QAAQ;IACd,sEAAsE;IACtE,IAAI,KAAK,AAAC,UAAU,MAAM,GAAG,IAAK;IAClC,IAAI,SAAS,CAAC,UAAU,MAAM,GAAG,EAAE,IAAI,KACnC,MAAM;SACL,IAAI,SAAS,CAAC,UAAU,MAAM,GAAG,EAAE,IAAI,KACxC,MAAM;IACV,IAAI,QAAQ,IAAI,WAAW,KAAK,UAAU,GAC1C,WAAW,GACX,GACA,IAAI,GAAG,gBAAgB;IACvB,IAAK,IAAI,IAAI,GAAG,IAAI,UAAU,MAAM,EAAE,IAAK;QACvC,IAAI,KAAK,CAAC,UAAU,UAAU,CAAC,GAAG;QAClC,IAAI,MAAM,WAAW;YACjB,OAAQ,SAAS,CAAC,EAAE;gBAChB,sDAAsD;gBACtD,KAAK;oBACD,WAAW,GAAG,iCAAiC;gBACnD,0CAA0C;gBAC1C,KAAK;gBACL,KAAK;gBACL,KAAK;gBACL,KAAK;oBACD,UAAU,gCAAgC;gBAC9C;oBACI,MAAM,MAAM;YACpB;QACJ;QACA,OAAQ;YACJ,KAAK;gBACD,IAAI;gBACJ,WAAW;gBACX;YACJ,KAAK;gBACD,KAAK,CAAC,UAAU,GAAG,AAAC,KAAK,IAAM,CAAC,IAAI,EAAE,KAAK;gBAC3C,IAAI;gBACJ,WAAW;gBACX;YACJ,KAAK;gBACD,KAAK,CAAC,UAAU,GAAG,AAAC,CAAC,IAAI,EAAE,KAAK,IAAM,CAAC,IAAI,EAAE,KAAK;gBAClD,IAAI;gBACJ,WAAW;gBACX;YACJ,KAAK;gBACD,KAAK,CAAC,UAAU,GAAG,AAAC,CAAC,IAAI,CAAC,KAAK,IAAK;gBACpC,WAAW;gBACX;QACR;IACJ;IACA,IAAI,YAAY,GACZ,MAAM,MAAM;IAChB,OAAO,MAAM,QAAQ,CAAC,GAAG;AAC7B;AACA;;;;;;;;;CASC,GACD,SAAS,aAAa,KAAK,EAAE,WAAW,KAAK;IACzC,MAAM,QAAQ,eAAe;IAC7B,MAAM,MAAM,YAAY;IACxB,IAAI,SAAS,IAAI,WAAW,GAC5B,GACA,IAAI,GAAG,gCAAgC;IACvC,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,IAAK;QACnC,IAAI,KAAK,CAAC,EAAE;QACZ,OAAQ;YACJ,KAAK;gBACD,UAAU,KAAK,CAAC,KAAK,EAAE;gBACvB,IAAI,CAAC,IAAI,CAAC,KAAK;gBACf,WAAW;gBACX;YACJ,KAAK;gBACD,UAAU,KAAK,CAAC,IAAK,KAAK,EAAG;gBAC7B,IAAI,CAAC,IAAI,EAAE,KAAK;gBAChB,WAAW;gBACX;YACJ,KAAK;gBACD,UAAU,KAAK,CAAC,IAAK,KAAK,EAAG;gBAC7B,UAAU,KAAK,CAAC,IAAI,GAAG;gBACvB,WAAW;gBACX;QACR;IACJ;IACA,qBAAqB;IACrB,IAAI,UAAU;QACV,UAAU,KAAK,CAAC,EAAE;QAClB,IAAI,KAAK;YACL,UAAU;YACV,IAAI,YAAY,GACZ,UAAU;QAClB;IACJ;IACA,OAAO;AACX;AACA,6CAA6C;AAC7C,IAAI;AACJ,IAAI;AACJ,qFAAqF;AACrF,IAAI;AACJ,SAAS,eAAe,QAAQ;IAC5B,IAAI,CAAC,gBAAgB;QACjB,iBACI,mEAAmE,KAAK,CAAC;QAC7E,iBAAiB,eAAe,KAAK,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,KAAK;IAC7D;IACA,OAAO,YAAY,QAAQ,iBAAiB;AAChD;AACA,SAAS;IACL,IAAI,CAAC,aAAa;QACd,cAAc,EAAE;QAChB,MAAM,cAAc,eAAe;QACnC,IAAK,IAAI,IAAI,GAAG,IAAI,YAAY,MAAM,EAAE,IACpC,WAAW,CAAC,WAAW,CAAC,EAAE,CAAC,UAAU,CAAC,GAAG,GAAG;QAChD,6BAA6B;QAC7B,WAAW,CAAC,IAAI,UAAU,CAAC,GAAG,GAAG,YAAY,OAAO,CAAC;QACrD,WAAW,CAAC,IAAI,UAAU,CAAC,GAAG,GAAG,YAAY,OAAO,CAAC;IACzD;IACA,OAAO;AACX","ignoreList":[0]}},
    {"offset": {"line": 1118, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1123, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/duzur/Downloads/Voxindiav3/node_modules/%40bufbuild/protobuf/dist/cjs/descriptors.js"],"sourcesContent":["\"use strict\";\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ScalarType = void 0;\n/**\n * Scalar value types. This is a subset of field types declared by protobuf\n * enum google.protobuf.FieldDescriptorProto.Type The types GROUP and MESSAGE\n * are omitted, but the numerical values are identical.\n */\nvar ScalarType;\n(function (ScalarType) {\n    // 0 is reserved for errors.\n    // Order is weird for historical reasons.\n    ScalarType[ScalarType[\"DOUBLE\"] = 1] = \"DOUBLE\";\n    ScalarType[ScalarType[\"FLOAT\"] = 2] = \"FLOAT\";\n    // Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT64 if\n    // negative values are likely.\n    ScalarType[ScalarType[\"INT64\"] = 3] = \"INT64\";\n    ScalarType[ScalarType[\"UINT64\"] = 4] = \"UINT64\";\n    // Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT32 if\n    // negative values are likely.\n    ScalarType[ScalarType[\"INT32\"] = 5] = \"INT32\";\n    ScalarType[ScalarType[\"FIXED64\"] = 6] = \"FIXED64\";\n    ScalarType[ScalarType[\"FIXED32\"] = 7] = \"FIXED32\";\n    ScalarType[ScalarType[\"BOOL\"] = 8] = \"BOOL\";\n    ScalarType[ScalarType[\"STRING\"] = 9] = \"STRING\";\n    // Tag-delimited aggregate.\n    // Group type is deprecated and not supported in proto3. However, Proto3\n    // implementations should still be able to parse the group wire format and\n    // treat group fields as unknown fields.\n    // TYPE_GROUP = 10,\n    // TYPE_MESSAGE = 11,  // Length-delimited aggregate.\n    // New in version 2.\n    ScalarType[ScalarType[\"BYTES\"] = 12] = \"BYTES\";\n    ScalarType[ScalarType[\"UINT32\"] = 13] = \"UINT32\";\n    // TYPE_ENUM = 14,\n    ScalarType[ScalarType[\"SFIXED32\"] = 15] = \"SFIXED32\";\n    ScalarType[ScalarType[\"SFIXED64\"] = 16] = \"SFIXED64\";\n    ScalarType[ScalarType[\"SINT32\"] = 17] = \"SINT32\";\n    ScalarType[ScalarType[\"SINT64\"] = 18] = \"SINT64\";\n})(ScalarType || (exports.ScalarType = ScalarType = {}));\n"],"names":[],"mappings":"AAAA;AACA,6CAA6C;AAC7C,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;AACjC,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,UAAU,GAAG,KAAK;AAC1B;;;;CAIC,GACD,IAAI;AACJ,CAAC,SAAU,UAAU;IACjB,4BAA4B;IAC5B,yCAAyC;IACzC,UAAU,CAAC,UAAU,CAAC,SAAS,GAAG,EAAE,GAAG;IACvC,UAAU,CAAC,UAAU,CAAC,QAAQ,GAAG,EAAE,GAAG;IACtC,2EAA2E;IAC3E,8BAA8B;IAC9B,UAAU,CAAC,UAAU,CAAC,QAAQ,GAAG,EAAE,GAAG;IACtC,UAAU,CAAC,UAAU,CAAC,SAAS,GAAG,EAAE,GAAG;IACvC,2EAA2E;IAC3E,8BAA8B;IAC9B,UAAU,CAAC,UAAU,CAAC,QAAQ,GAAG,EAAE,GAAG;IACtC,UAAU,CAAC,UAAU,CAAC,UAAU,GAAG,EAAE,GAAG;IACxC,UAAU,CAAC,UAAU,CAAC,UAAU,GAAG,EAAE,GAAG;IACxC,UAAU,CAAC,UAAU,CAAC,OAAO,GAAG,EAAE,GAAG;IACrC,UAAU,CAAC,UAAU,CAAC,SAAS,GAAG,EAAE,GAAG;IACvC,2BAA2B;IAC3B,wEAAwE;IACxE,0EAA0E;IAC1E,wCAAwC;IACxC,mBAAmB;IACnB,qDAAqD;IACrD,oBAAoB;IACpB,UAAU,CAAC,UAAU,CAAC,QAAQ,GAAG,GAAG,GAAG;IACvC,UAAU,CAAC,UAAU,CAAC,SAAS,GAAG,GAAG,GAAG;IACxC,kBAAkB;IAClB,UAAU,CAAC,UAAU,CAAC,WAAW,GAAG,GAAG,GAAG;IAC1C,UAAU,CAAC,UAAU,CAAC,WAAW,GAAG,GAAG,GAAG;IAC1C,UAAU,CAAC,UAAU,CAAC,SAAS,GAAG,GAAG,GAAG;IACxC,UAAU,CAAC,UAAU,CAAC,SAAS,GAAG,GAAG,GAAG;AAC5C,CAAC,EAAE,cAAc,CAAC,QAAQ,UAAU,GAAG,aAAa,CAAC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1177, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1182, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/duzur/Downloads/Voxindiav3/node_modules/%40bufbuild/protobuf/dist/cjs/wire/text-format.js"],"sourcesContent":["\"use strict\";\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseTextFormatEnumValue = parseTextFormatEnumValue;\nexports.parseTextFormatScalarValue = parseTextFormatScalarValue;\nconst descriptors_js_1 = require(\"../descriptors.js\");\nconst proto_int64_js_1 = require(\"../proto-int64.js\");\n/* eslint-disable @typescript-eslint/restrict-template-expressions */\n/**\n * Parse an enum value from the Protobuf text format.\n *\n * @private\n */\nfunction parseTextFormatEnumValue(descEnum, value) {\n    const enumValue = descEnum.values.find((v) => v.name === value);\n    if (!enumValue) {\n        throw new Error(`cannot parse ${descEnum} default value: ${value}`);\n    }\n    return enumValue.number;\n}\n/**\n * Parse a scalar value from the Protobuf text format.\n *\n * @private\n */\nfunction parseTextFormatScalarValue(type, value) {\n    switch (type) {\n        case descriptors_js_1.ScalarType.STRING:\n            return value;\n        case descriptors_js_1.ScalarType.BYTES: {\n            const u = unescapeBytesDefaultValue(value);\n            if (u === false) {\n                throw new Error(`cannot parse ${descriptors_js_1.ScalarType[type]} default value: ${value}`);\n            }\n            return u;\n        }\n        case descriptors_js_1.ScalarType.INT64:\n        case descriptors_js_1.ScalarType.SFIXED64:\n        case descriptors_js_1.ScalarType.SINT64:\n            return proto_int64_js_1.protoInt64.parse(value);\n        case descriptors_js_1.ScalarType.UINT64:\n        case descriptors_js_1.ScalarType.FIXED64:\n            return proto_int64_js_1.protoInt64.uParse(value);\n        case descriptors_js_1.ScalarType.DOUBLE:\n        case descriptors_js_1.ScalarType.FLOAT:\n            switch (value) {\n                case \"inf\":\n                    return Number.POSITIVE_INFINITY;\n                case \"-inf\":\n                    return Number.NEGATIVE_INFINITY;\n                case \"nan\":\n                    return Number.NaN;\n                default:\n                    return parseFloat(value);\n            }\n        case descriptors_js_1.ScalarType.BOOL:\n            return value === \"true\";\n        case descriptors_js_1.ScalarType.INT32:\n        case descriptors_js_1.ScalarType.UINT32:\n        case descriptors_js_1.ScalarType.SINT32:\n        case descriptors_js_1.ScalarType.FIXED32:\n        case descriptors_js_1.ScalarType.SFIXED32:\n            return parseInt(value, 10);\n    }\n}\n/**\n * Parses a text-encoded default value (proto2) of a BYTES field.\n */\nfunction unescapeBytesDefaultValue(str) {\n    const b = [];\n    const input = {\n        tail: str,\n        c: \"\",\n        next() {\n            if (this.tail.length == 0) {\n                return false;\n            }\n            this.c = this.tail[0];\n            this.tail = this.tail.substring(1);\n            return true;\n        },\n        take(n) {\n            if (this.tail.length >= n) {\n                const r = this.tail.substring(0, n);\n                this.tail = this.tail.substring(n);\n                return r;\n            }\n            return false;\n        },\n    };\n    while (input.next()) {\n        switch (input.c) {\n            case \"\\\\\":\n                if (input.next()) {\n                    switch (input.c) {\n                        case \"\\\\\":\n                            b.push(input.c.charCodeAt(0));\n                            break;\n                        case \"b\":\n                            b.push(0x08);\n                            break;\n                        case \"f\":\n                            b.push(0x0c);\n                            break;\n                        case \"n\":\n                            b.push(0x0a);\n                            break;\n                        case \"r\":\n                            b.push(0x0d);\n                            break;\n                        case \"t\":\n                            b.push(0x09);\n                            break;\n                        case \"v\":\n                            b.push(0x0b);\n                            break;\n                        case \"0\":\n                        case \"1\":\n                        case \"2\":\n                        case \"3\":\n                        case \"4\":\n                        case \"5\":\n                        case \"6\":\n                        case \"7\": {\n                            const s = input.c;\n                            const t = input.take(2);\n                            if (t === false) {\n                                return false;\n                            }\n                            const n = parseInt(s + t, 8);\n                            if (isNaN(n)) {\n                                return false;\n                            }\n                            b.push(n);\n                            break;\n                        }\n                        case \"x\": {\n                            const s = input.c;\n                            const t = input.take(2);\n                            if (t === false) {\n                                return false;\n                            }\n                            const n = parseInt(s + t, 16);\n                            if (isNaN(n)) {\n                                return false;\n                            }\n                            b.push(n);\n                            break;\n                        }\n                        case \"u\": {\n                            const s = input.c;\n                            const t = input.take(4);\n                            if (t === false) {\n                                return false;\n                            }\n                            const n = parseInt(s + t, 16);\n                            if (isNaN(n)) {\n                                return false;\n                            }\n                            const chunk = new Uint8Array(4);\n                            const view = new DataView(chunk.buffer);\n                            view.setInt32(0, n, true);\n                            b.push(chunk[0], chunk[1], chunk[2], chunk[3]);\n                            break;\n                        }\n                        case \"U\": {\n                            const s = input.c;\n                            const t = input.take(8);\n                            if (t === false) {\n                                return false;\n                            }\n                            const tc = proto_int64_js_1.protoInt64.uEnc(s + t);\n                            const chunk = new Uint8Array(8);\n                            const view = new DataView(chunk.buffer);\n                            view.setInt32(0, tc.lo, true);\n                            view.setInt32(4, tc.hi, true);\n                            b.push(chunk[0], chunk[1], chunk[2], chunk[3], chunk[4], chunk[5], chunk[6], chunk[7]);\n                            break;\n                        }\n                    }\n                }\n                break;\n            default:\n                b.push(input.c.charCodeAt(0));\n        }\n    }\n    return new Uint8Array(b);\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1385, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1390, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/duzur/Downloads/Voxindiav3/node_modules/%40bufbuild/protobuf/dist/cjs/is-message.js"],"sourcesContent":["\"use strict\";\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isMessage = isMessage;\n/**\n * Determine whether the given `arg` is a message.\n * If `desc` is set, determine whether `arg` is this specific message.\n */\nfunction isMessage(arg, schema) {\n    const isMessage = arg !== null &&\n        typeof arg == \"object\" &&\n        \"$typeName\" in arg &&\n        typeof arg.$typeName == \"string\";\n    if (!isMessage) {\n        return false;\n    }\n    if (schema === undefined) {\n        return true;\n    }\n    return schema.typeName === arg.$typeName;\n}\n"],"names":[],"mappings":"AAAA;AACA,6CAA6C;AAC7C,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;AACjC,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,SAAS,GAAG;AACpB;;;CAGC,GACD,SAAS,UAAU,GAAG,EAAE,MAAM;IAC1B,MAAM,YAAY,QAAQ,QACtB,OAAO,OAAO,YACd,eAAe,OACf,OAAO,IAAI,SAAS,IAAI;IAC5B,IAAI,CAAC,WAAW;QACZ,OAAO;IACX;IACA,IAAI,WAAW,WAAW;QACtB,OAAO;IACX;IACA,OAAO,OAAO,QAAQ,KAAK,IAAI,SAAS;AAC5C","ignoreList":[0]}},
    {"offset": {"line": 1421, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1426, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/duzur/Downloads/Voxindiav3/node_modules/%40bufbuild/protobuf/dist/cjs/reflect/error.js"],"sourcesContent":["\"use strict\";\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FieldError = void 0;\nexports.isFieldError = isFieldError;\nconst errorNames = [\n    \"FieldValueInvalidError\",\n    \"FieldListRangeError\",\n    \"ForeignFieldError\",\n];\nclass FieldError extends Error {\n    constructor(fieldOrOneof, message, name = \"FieldValueInvalidError\") {\n        super(message);\n        this.name = name;\n        this.field = () => fieldOrOneof;\n    }\n}\nexports.FieldError = FieldError;\nfunction isFieldError(arg) {\n    return (arg instanceof Error &&\n        errorNames.includes(arg.name) &&\n        \"field\" in arg &&\n        typeof arg.field == \"function\");\n}\n"],"names":[],"mappings":"AAAA;AACA,6CAA6C;AAC7C,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;AACjC,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,UAAU,GAAG,KAAK;AAC1B,QAAQ,YAAY,GAAG;AACvB,MAAM,aAAa;IACf;IACA;IACA;CACH;AACD,MAAM,mBAAmB;IACrB,YAAY,YAAY,EAAE,OAAO,EAAE,OAAO,wBAAwB,CAAE;QAChE,KAAK,CAAC;QACN,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,KAAK,GAAG,IAAM;IACvB;AACJ;AACA,QAAQ,UAAU,GAAG;AACrB,SAAS,aAAa,GAAG;IACrB,OAAQ,eAAe,SACnB,WAAW,QAAQ,CAAC,IAAI,IAAI,KAC5B,WAAW,OACX,OAAO,IAAI,KAAK,IAAI;AAC5B","ignoreList":[0]}},
    {"offset": {"line": 1461, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1466, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/duzur/Downloads/Voxindiav3/node_modules/%40bufbuild/protobuf/dist/cjs/reflect/scalar.js"],"sourcesContent":["\"use strict\";\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.scalarEquals = scalarEquals;\nexports.scalarZeroValue = scalarZeroValue;\nexports.isScalarZeroValue = isScalarZeroValue;\nconst proto_int64_js_1 = require(\"../proto-int64.js\");\nconst descriptors_js_1 = require(\"../descriptors.js\");\n/**\n * Returns true if both scalar values are equal.\n */\nfunction scalarEquals(type, a, b) {\n    if (a === b) {\n        // This correctly matches equal values except BYTES and (possibly) 64-bit integers.\n        return true;\n    }\n    // Special case BYTES - we need to compare each byte individually\n    if (type == descriptors_js_1.ScalarType.BYTES) {\n        if (!(a instanceof Uint8Array) || !(b instanceof Uint8Array)) {\n            return false;\n        }\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (let i = 0; i < a.length; i++) {\n            if (a[i] !== b[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    // Special case 64-bit integers - we support number, string and bigint representation.\n    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check\n    switch (type) {\n        case descriptors_js_1.ScalarType.UINT64:\n        case descriptors_js_1.ScalarType.FIXED64:\n        case descriptors_js_1.ScalarType.INT64:\n        case descriptors_js_1.ScalarType.SFIXED64:\n        case descriptors_js_1.ScalarType.SINT64:\n            // Loose comparison will match between 0n, 0 and \"0\".\n            return a == b;\n    }\n    // Anything that hasn't been caught by strict comparison or special cased\n    // BYTES and 64-bit integers is not equal.\n    return false;\n}\n/**\n * Returns the zero value for the given scalar type.\n */\nfunction scalarZeroValue(type, longAsString) {\n    switch (type) {\n        case descriptors_js_1.ScalarType.STRING:\n            return \"\";\n        case descriptors_js_1.ScalarType.BOOL:\n            return false;\n        default:\n            // Handles INT32, UINT32, SINT32, FIXED32, SFIXED32.\n            // We do not use individual cases to save a few bytes code size.\n            return 0;\n        case descriptors_js_1.ScalarType.DOUBLE:\n        case descriptors_js_1.ScalarType.FLOAT:\n            return 0.0;\n        case descriptors_js_1.ScalarType.INT64:\n        case descriptors_js_1.ScalarType.UINT64:\n        case descriptors_js_1.ScalarType.SFIXED64:\n        case descriptors_js_1.ScalarType.FIXED64:\n        case descriptors_js_1.ScalarType.SINT64:\n            return (longAsString ? \"0\" : proto_int64_js_1.protoInt64.zero);\n        case descriptors_js_1.ScalarType.BYTES:\n            return new Uint8Array(0);\n    }\n}\n/**\n * Returns true for a zero-value. For example, an integer has the zero-value `0`,\n * a boolean is `false`, a string is `\"\"`, and bytes is an empty Uint8Array.\n *\n * In proto3, zero-values are not written to the wire, unless the field is\n * optional or repeated.\n */\nfunction isScalarZeroValue(type, value) {\n    switch (type) {\n        case descriptors_js_1.ScalarType.BOOL:\n            return value === false;\n        case descriptors_js_1.ScalarType.STRING:\n            return value === \"\";\n        case descriptors_js_1.ScalarType.BYTES:\n            return value instanceof Uint8Array && !value.byteLength;\n        default:\n            return value == 0; // Loose comparison matches 0n, 0 and \"0\"\n    }\n}\n"],"names":[],"mappings":"AAAA;AACA,6CAA6C;AAC7C,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;AACjC,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,YAAY,GAAG;AACvB,QAAQ,eAAe,GAAG;AAC1B,QAAQ,iBAAiB,GAAG;AAC5B,MAAM;AACN,MAAM;AACN;;CAEC,GACD,SAAS,aAAa,IAAI,EAAE,CAAC,EAAE,CAAC;IAC5B,IAAI,MAAM,GAAG;QACT,mFAAmF;QACnF,OAAO;IACX;IACA,iEAAiE;IACjE,IAAI,QAAQ,iBAAiB,UAAU,CAAC,KAAK,EAAE;QAC3C,IAAI,CAAC,CAAC,aAAa,UAAU,KAAK,CAAC,CAAC,aAAa,UAAU,GAAG;YAC1D,OAAO;QACX;QACA,IAAI,EAAE,MAAM,KAAK,EAAE,MAAM,EAAE;YACvB,OAAO;QACX;QACA,IAAK,IAAI,IAAI,GAAG,IAAI,EAAE,MAAM,EAAE,IAAK;YAC/B,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,EAAE;gBACf,OAAO;YACX;QACJ;QACA,OAAO;IACX;IACA,sFAAsF;IACtF,0EAA0E;IAC1E,OAAQ;QACJ,KAAK,iBAAiB,UAAU,CAAC,MAAM;QACvC,KAAK,iBAAiB,UAAU,CAAC,OAAO;QACxC,KAAK,iBAAiB,UAAU,CAAC,KAAK;QACtC,KAAK,iBAAiB,UAAU,CAAC,QAAQ;QACzC,KAAK,iBAAiB,UAAU,CAAC,MAAM;YACnC,qDAAqD;YACrD,OAAO,KAAK;IACpB;IACA,yEAAyE;IACzE,0CAA0C;IAC1C,OAAO;AACX;AACA;;CAEC,GACD,SAAS,gBAAgB,IAAI,EAAE,YAAY;IACvC,OAAQ;QACJ,KAAK,iBAAiB,UAAU,CAAC,MAAM;YACnC,OAAO;QACX,KAAK,iBAAiB,UAAU,CAAC,IAAI;YACjC,OAAO;QACX;YACI,oDAAoD;YACpD,gEAAgE;YAChE,OAAO;QACX,KAAK,iBAAiB,UAAU,CAAC,MAAM;QACvC,KAAK,iBAAiB,UAAU,CAAC,KAAK;YAClC,OAAO;QACX,KAAK,iBAAiB,UAAU,CAAC,KAAK;QACtC,KAAK,iBAAiB,UAAU,CAAC,MAAM;QACvC,KAAK,iBAAiB,UAAU,CAAC,QAAQ;QACzC,KAAK,iBAAiB,UAAU,CAAC,OAAO;QACxC,KAAK,iBAAiB,UAAU,CAAC,MAAM;YACnC,OAAQ,eAAe,MAAM,iBAAiB,UAAU,CAAC,IAAI;QACjE,KAAK,iBAAiB,UAAU,CAAC,KAAK;YAClC,OAAO,IAAI,WAAW;IAC9B;AACJ;AACA;;;;;;CAMC,GACD,SAAS,kBAAkB,IAAI,EAAE,KAAK;IAClC,OAAQ;QACJ,KAAK,iBAAiB,UAAU,CAAC,IAAI;YACjC,OAAO,UAAU;QACrB,KAAK,iBAAiB,UAAU,CAAC,MAAM;YACnC,OAAO,UAAU;QACrB,KAAK,iBAAiB,UAAU,CAAC,KAAK;YAClC,OAAO,iBAAiB,cAAc,CAAC,MAAM,UAAU;QAC3D;YACI,OAAO,SAAS,GAAG,yCAAyC;IACpE;AACJ","ignoreList":[0]}},
    {"offset": {"line": 1568, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1573, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/duzur/Downloads/Voxindiav3/node_modules/%40bufbuild/protobuf/dist/cjs/reflect/unsafe.js"],"sourcesContent":["\"use strict\";\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.unsafeLocal = void 0;\nexports.unsafeOneofCase = unsafeOneofCase;\nexports.unsafeIsSet = unsafeIsSet;\nexports.unsafeIsSetExplicit = unsafeIsSetExplicit;\nexports.unsafeGet = unsafeGet;\nexports.unsafeSet = unsafeSet;\nexports.unsafeClear = unsafeClear;\nconst scalar_js_1 = require(\"./scalar.js\");\n// bootstrap-inject google.protobuf.FeatureSet.FieldPresence.IMPLICIT: const $name: FeatureSet_FieldPresence.$localName = $number;\nconst IMPLICIT = 2;\nexports.unsafeLocal = Symbol.for(\"reflect unsafe local\");\n/**\n * Return the selected field of a oneof group.\n *\n * @private\n */\nfunction unsafeOneofCase(target, // eslint-disable-line @typescript-eslint/no-explicit-any -- `any` is the best choice for dynamic access\noneof) {\n    const c = target[oneof.localName].case;\n    if (c === undefined) {\n        return c;\n    }\n    return oneof.fields.find((f) => f.localName === c);\n}\n/**\n * Returns true if the field is set.\n *\n * @private\n */\nfunction unsafeIsSet(target, // eslint-disable-line @typescript-eslint/no-explicit-any -- `any` is the best choice for dynamic access\nfield) {\n    const name = field.localName;\n    if (field.oneof) {\n        return target[field.oneof.localName].case === name; // eslint-disable-line @typescript-eslint/no-unsafe-member-access\n    }\n    if (field.presence != IMPLICIT) {\n        // Fields with explicit presence have properties on the prototype chain\n        // for default / zero values (except for proto3).\n        return (target[name] !== undefined &&\n            Object.prototype.hasOwnProperty.call(target, name));\n    }\n    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check\n    switch (field.fieldKind) {\n        case \"list\":\n            return target[name].length > 0;\n        case \"map\":\n            return Object.keys(target[name]).length > 0; // eslint-disable-line @typescript-eslint/no-unsafe-argument\n        case \"scalar\":\n            return !(0, scalar_js_1.isScalarZeroValue)(field.scalar, target[name]);\n        case \"enum\":\n            return target[name] !== field.enum.values[0].number;\n    }\n    throw new Error(\"message field with implicit presence\");\n}\n/**\n * Returns true if the field is set, but only for singular fields with explicit\n * presence (proto2).\n *\n * @private\n */\nfunction unsafeIsSetExplicit(target, localName) {\n    return (Object.prototype.hasOwnProperty.call(target, localName) &&\n        target[localName] !== undefined);\n}\n/**\n * Return a field value, respecting oneof groups.\n *\n * @private\n */\nfunction unsafeGet(target, field) {\n    if (field.oneof) {\n        const oneof = target[field.oneof.localName];\n        if (oneof.case === field.localName) {\n            return oneof.value;\n        }\n        return undefined;\n    }\n    return target[field.localName];\n}\n/**\n * Set a field value, respecting oneof groups.\n *\n * @private\n */\nfunction unsafeSet(target, field, value) {\n    if (field.oneof) {\n        target[field.oneof.localName] = {\n            case: field.localName,\n            value: value,\n        };\n    }\n    else {\n        target[field.localName] = value;\n    }\n}\n/**\n * Resets the field, so that unsafeIsSet() will return false.\n *\n * @private\n */\nfunction unsafeClear(target, // eslint-disable-line @typescript-eslint/no-explicit-any -- `any` is the best choice for dynamic access\nfield) {\n    const name = field.localName;\n    if (field.oneof) {\n        const oneofLocalName = field.oneof.localName;\n        if (target[oneofLocalName].case === name) {\n            target[oneofLocalName] = { case: undefined };\n        }\n    }\n    else if (field.presence != IMPLICIT) {\n        // Fields with explicit presence have properties on the prototype chain\n        // for default / zero values (except for proto3). By deleting their own\n        // property, the field is reset.\n        delete target[name];\n    }\n    else {\n        // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check\n        switch (field.fieldKind) {\n            case \"map\":\n                target[name] = {};\n                break;\n            case \"list\":\n                target[name] = [];\n                break;\n            case \"enum\":\n                target[name] = field.enum.values[0].number;\n                break;\n            case \"scalar\":\n                target[name] = (0, scalar_js_1.scalarZeroValue)(field.scalar, field.longAsString);\n                break;\n        }\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1711, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1716, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/duzur/Downloads/Voxindiav3/node_modules/%40bufbuild/protobuf/dist/cjs/reflect/guard.js"],"sourcesContent":["\"use strict\";\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isObject = isObject;\nexports.isOneofADT = isOneofADT;\nexports.isReflectList = isReflectList;\nexports.isReflectMap = isReflectMap;\nexports.isReflectMessage = isReflectMessage;\nconst unsafe_js_1 = require(\"./unsafe.js\");\nfunction isObject(arg) {\n    return arg !== null && typeof arg == \"object\" && !Array.isArray(arg);\n}\nfunction isOneofADT(arg) {\n    return (arg !== null &&\n        typeof arg == \"object\" &&\n        \"case\" in arg &&\n        ((typeof arg.case == \"string\" && \"value\" in arg && arg.value != null) ||\n            (arg.case === undefined &&\n                (!(\"value\" in arg) || arg.value === undefined))));\n}\nfunction isReflectList(arg, field) {\n    var _a, _b, _c, _d;\n    if (isObject(arg) &&\n        unsafe_js_1.unsafeLocal in arg &&\n        \"add\" in arg &&\n        \"field\" in arg &&\n        typeof arg.field == \"function\") {\n        if (field !== undefined) {\n            const a = field, b = arg.field();\n            return (a.listKind == b.listKind &&\n                a.scalar === b.scalar &&\n                ((_a = a.message) === null || _a === void 0 ? void 0 : _a.typeName) === ((_b = b.message) === null || _b === void 0 ? void 0 : _b.typeName) &&\n                ((_c = a.enum) === null || _c === void 0 ? void 0 : _c.typeName) === ((_d = b.enum) === null || _d === void 0 ? void 0 : _d.typeName));\n        }\n        return true;\n    }\n    return false;\n}\nfunction isReflectMap(arg, field) {\n    var _a, _b, _c, _d;\n    if (isObject(arg) &&\n        unsafe_js_1.unsafeLocal in arg &&\n        \"has\" in arg &&\n        \"field\" in arg &&\n        typeof arg.field == \"function\") {\n        if (field !== undefined) {\n            const a = field, b = arg.field();\n            return (a.mapKey === b.mapKey &&\n                a.mapKind == b.mapKind &&\n                a.scalar === b.scalar &&\n                ((_a = a.message) === null || _a === void 0 ? void 0 : _a.typeName) === ((_b = b.message) === null || _b === void 0 ? void 0 : _b.typeName) &&\n                ((_c = a.enum) === null || _c === void 0 ? void 0 : _c.typeName) === ((_d = b.enum) === null || _d === void 0 ? void 0 : _d.typeName));\n        }\n        return true;\n    }\n    return false;\n}\nfunction isReflectMessage(arg, messageDesc) {\n    return (isObject(arg) &&\n        unsafe_js_1.unsafeLocal in arg &&\n        \"desc\" in arg &&\n        isObject(arg.desc) &&\n        arg.desc.kind === \"message\" &&\n        (messageDesc === undefined || arg.desc.typeName == messageDesc.typeName));\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1770, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1775, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/duzur/Downloads/Voxindiav3/node_modules/%40bufbuild/protobuf/dist/cjs/reflect/reflect-check.js"],"sourcesContent":["\"use strict\";\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkField = checkField;\nexports.checkListItem = checkListItem;\nexports.checkMapEntry = checkMapEntry;\nexports.formatVal = formatVal;\nconst descriptors_js_1 = require(\"../descriptors.js\");\nconst is_message_js_1 = require(\"../is-message.js\");\nconst error_js_1 = require(\"./error.js\");\nconst guard_js_1 = require(\"./guard.js\");\nconst binary_encoding_js_1 = require(\"../wire/binary-encoding.js\");\nconst text_encoding_js_1 = require(\"../wire/text-encoding.js\");\nconst proto_int64_js_1 = require(\"../proto-int64.js\");\n/**\n * Check whether the given field value is valid for the reflect API.\n */\nfunction checkField(field, value) {\n    const check = field.fieldKind == \"list\"\n        ? (0, guard_js_1.isReflectList)(value, field)\n        : field.fieldKind == \"map\"\n            ? (0, guard_js_1.isReflectMap)(value, field)\n            : checkSingular(field, value);\n    if (check === true) {\n        return undefined;\n    }\n    let reason;\n    switch (field.fieldKind) {\n        case \"list\":\n            reason = `expected ${formatReflectList(field)}, got ${formatVal(value)}`;\n            break;\n        case \"map\":\n            reason = `expected ${formatReflectMap(field)}, got ${formatVal(value)}`;\n            break;\n        default: {\n            reason = reasonSingular(field, value, check);\n        }\n    }\n    return new error_js_1.FieldError(field, reason);\n}\n/**\n * Check whether the given list item is valid for the reflect API.\n */\nfunction checkListItem(field, index, value) {\n    const check = checkSingular(field, value);\n    if (check !== true) {\n        return new error_js_1.FieldError(field, `list item #${index + 1}: ${reasonSingular(field, value, check)}`);\n    }\n    return undefined;\n}\n/**\n * Check whether the given map key and value are valid for the reflect API.\n */\nfunction checkMapEntry(field, key, value) {\n    const checkKey = checkScalarValue(key, field.mapKey);\n    if (checkKey !== true) {\n        return new error_js_1.FieldError(field, `invalid map key: ${reasonSingular({ scalar: field.mapKey }, key, checkKey)}`);\n    }\n    const checkVal = checkSingular(field, value);\n    if (checkVal !== true) {\n        return new error_js_1.FieldError(field, `map entry ${formatVal(key)}: ${reasonSingular(field, value, checkVal)}`);\n    }\n    return undefined;\n}\nfunction checkSingular(field, value) {\n    if (field.scalar !== undefined) {\n        return checkScalarValue(value, field.scalar);\n    }\n    if (field.enum !== undefined) {\n        if (field.enum.open) {\n            return Number.isInteger(value);\n        }\n        return field.enum.values.some((v) => v.number === value);\n    }\n    return (0, guard_js_1.isReflectMessage)(value, field.message);\n}\nfunction checkScalarValue(value, scalar) {\n    switch (scalar) {\n        case descriptors_js_1.ScalarType.DOUBLE:\n            return typeof value == \"number\";\n        case descriptors_js_1.ScalarType.FLOAT:\n            if (typeof value != \"number\") {\n                return false;\n            }\n            if (Number.isNaN(value) || !Number.isFinite(value)) {\n                return true;\n            }\n            if (value > binary_encoding_js_1.FLOAT32_MAX || value < binary_encoding_js_1.FLOAT32_MIN) {\n                return `${value.toFixed()} out of range`;\n            }\n            return true;\n        case descriptors_js_1.ScalarType.INT32:\n        case descriptors_js_1.ScalarType.SFIXED32:\n        case descriptors_js_1.ScalarType.SINT32:\n            // signed\n            if (typeof value !== \"number\" || !Number.isInteger(value)) {\n                return false;\n            }\n            if (value > binary_encoding_js_1.INT32_MAX || value < binary_encoding_js_1.INT32_MIN) {\n                return `${value.toFixed()} out of range`;\n            }\n            return true;\n        case descriptors_js_1.ScalarType.FIXED32:\n        case descriptors_js_1.ScalarType.UINT32:\n            // unsigned\n            if (typeof value !== \"number\" || !Number.isInteger(value)) {\n                return false;\n            }\n            if (value > binary_encoding_js_1.UINT32_MAX || value < 0) {\n                return `${value.toFixed()} out of range`;\n            }\n            return true;\n        case descriptors_js_1.ScalarType.BOOL:\n            return typeof value == \"boolean\";\n        case descriptors_js_1.ScalarType.STRING:\n            if (typeof value != \"string\") {\n                return false;\n            }\n            return (0, text_encoding_js_1.getTextEncoding)().checkUtf8(value) || \"invalid UTF8\";\n        case descriptors_js_1.ScalarType.BYTES:\n            return value instanceof Uint8Array;\n        case descriptors_js_1.ScalarType.INT64:\n        case descriptors_js_1.ScalarType.SFIXED64:\n        case descriptors_js_1.ScalarType.SINT64:\n            // signed\n            if (typeof value != \"string\" &&\n                typeof value !== \"bigint\" &&\n                typeof value !== \"number\") {\n                return false;\n            }\n            try {\n                proto_int64_js_1.protoInt64.parse(value);\n            }\n            catch (e) {\n                return `${value} out of range`;\n            }\n            return true;\n        case descriptors_js_1.ScalarType.FIXED64:\n        case descriptors_js_1.ScalarType.UINT64:\n            // unsigned\n            if (typeof value != \"string\" &&\n                typeof value !== \"bigint\" &&\n                typeof value !== \"number\") {\n                return false;\n            }\n            try {\n                proto_int64_js_1.protoInt64.uParse(value);\n            }\n            catch (e) {\n                return `${value} out of range`;\n            }\n            return true;\n    }\n}\nfunction reasonSingular(field, val, details) {\n    details =\n        typeof details == \"string\" ? `: ${details}` : `, got ${formatVal(val)}`;\n    if (field.scalar !== undefined) {\n        return `expected ${scalarTypeDescription(field.scalar)}` + details;\n    }\n    else if (field.enum !== undefined) {\n        return `expected ${field.enum.toString()}` + details;\n    }\n    return `expected ${formatReflectMessage(field.message)}` + details;\n}\nfunction formatVal(val) {\n    switch (typeof val) {\n        case \"object\":\n            if (val === null) {\n                return \"null\";\n            }\n            if (val instanceof Uint8Array) {\n                return `Uint8Array(${val.length})`;\n            }\n            if (Array.isArray(val)) {\n                return `Array(${val.length})`;\n            }\n            if ((0, guard_js_1.isReflectList)(val)) {\n                return formatReflectList(val.field());\n            }\n            if ((0, guard_js_1.isReflectMap)(val)) {\n                return formatReflectMap(val.field());\n            }\n            if ((0, guard_js_1.isReflectMessage)(val)) {\n                return formatReflectMessage(val.desc);\n            }\n            if ((0, is_message_js_1.isMessage)(val)) {\n                return `message ${val.$typeName}`;\n            }\n            return \"object\";\n        case \"string\":\n            return val.length > 30 ? \"string\" : `\"${val.split('\"').join('\\\\\"')}\"`;\n        case \"boolean\":\n            return String(val);\n        case \"number\":\n            return String(val);\n        case \"bigint\":\n            return String(val) + \"n\";\n        default:\n            // \"symbol\" | \"undefined\" | \"object\" | \"function\"\n            return typeof val;\n    }\n}\nfunction formatReflectMessage(desc) {\n    return `ReflectMessage (${desc.typeName})`;\n}\nfunction formatReflectList(field) {\n    switch (field.listKind) {\n        case \"message\":\n            return `ReflectList (${field.message.toString()})`;\n        case \"enum\":\n            return `ReflectList (${field.enum.toString()})`;\n        case \"scalar\":\n            return `ReflectList (${descriptors_js_1.ScalarType[field.scalar]})`;\n    }\n}\nfunction formatReflectMap(field) {\n    switch (field.mapKind) {\n        case \"message\":\n            return `ReflectMap (${descriptors_js_1.ScalarType[field.mapKey]}, ${field.message.toString()})`;\n        case \"enum\":\n            return `ReflectMap (${descriptors_js_1.ScalarType[field.mapKey]}, ${field.enum.toString()})`;\n        case \"scalar\":\n            return `ReflectMap (${descriptors_js_1.ScalarType[field.mapKey]}, ${descriptors_js_1.ScalarType[field.scalar]})`;\n    }\n}\nfunction scalarTypeDescription(scalar) {\n    switch (scalar) {\n        case descriptors_js_1.ScalarType.STRING:\n            return \"string\";\n        case descriptors_js_1.ScalarType.BOOL:\n            return \"boolean\";\n        case descriptors_js_1.ScalarType.INT64:\n        case descriptors_js_1.ScalarType.SINT64:\n        case descriptors_js_1.ScalarType.SFIXED64:\n            return \"bigint (int64)\";\n        case descriptors_js_1.ScalarType.UINT64:\n        case descriptors_js_1.ScalarType.FIXED64:\n            return \"bigint (uint64)\";\n        case descriptors_js_1.ScalarType.BYTES:\n            return \"Uint8Array\";\n        case descriptors_js_1.ScalarType.DOUBLE:\n            return \"number (float64)\";\n        case descriptors_js_1.ScalarType.FLOAT:\n            return \"number (float32)\";\n        case descriptors_js_1.ScalarType.FIXED32:\n        case descriptors_js_1.ScalarType.UINT32:\n            return \"number (uint32)\";\n        case descriptors_js_1.ScalarType.INT32:\n        case descriptors_js_1.ScalarType.SFIXED32:\n        case descriptors_js_1.ScalarType.SINT32:\n            return \"number (int32)\";\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2031, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2036, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/duzur/Downloads/Voxindiav3/node_modules/%40bufbuild/protobuf/dist/cjs/wkt/wrappers.js"],"sourcesContent":["\"use strict\";\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isWrapper = isWrapper;\nexports.isWrapperDesc = isWrapperDesc;\nfunction isWrapper(arg) {\n    return isWrapperTypeName(arg.$typeName);\n}\nfunction isWrapperDesc(messageDesc) {\n    const f = messageDesc.fields[0];\n    return (isWrapperTypeName(messageDesc.typeName) &&\n        f !== undefined &&\n        f.fieldKind == \"scalar\" &&\n        f.name == \"value\" &&\n        f.number == 1);\n}\nfunction isWrapperTypeName(name) {\n    return (name.startsWith(\"google.protobuf.\") &&\n        [\n            \"DoubleValue\",\n            \"FloatValue\",\n            \"Int64Value\",\n            \"UInt64Value\",\n            \"Int32Value\",\n            \"UInt32Value\",\n            \"BoolValue\",\n            \"StringValue\",\n            \"BytesValue\",\n        ].includes(name.substring(16)));\n}\n"],"names":[],"mappings":"AAAA;AACA,6CAA6C;AAC7C,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;AACjC,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,SAAS,GAAG;AACpB,QAAQ,aAAa,GAAG;AACxB,SAAS,UAAU,GAAG;IAClB,OAAO,kBAAkB,IAAI,SAAS;AAC1C;AACA,SAAS,cAAc,WAAW;IAC9B,MAAM,IAAI,YAAY,MAAM,CAAC,EAAE;IAC/B,OAAQ,kBAAkB,YAAY,QAAQ,KAC1C,MAAM,aACN,EAAE,SAAS,IAAI,YACf,EAAE,IAAI,IAAI,WACV,EAAE,MAAM,IAAI;AACpB;AACA,SAAS,kBAAkB,IAAI;IAC3B,OAAQ,KAAK,UAAU,CAAC,uBACpB;QACI;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACH,CAAC,QAAQ,CAAC,KAAK,SAAS,CAAC;AAClC","ignoreList":[0]}},
    {"offset": {"line": 2075, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2080, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/duzur/Downloads/Voxindiav3/node_modules/%40bufbuild/protobuf/dist/cjs/create.js"],"sourcesContent":["\"use strict\";\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.create = create;\nconst is_message_js_1 = require(\"./is-message.js\");\nconst descriptors_js_1 = require(\"./descriptors.js\");\nconst scalar_js_1 = require(\"./reflect/scalar.js\");\nconst guard_js_1 = require(\"./reflect/guard.js\");\nconst unsafe_js_1 = require(\"./reflect/unsafe.js\");\nconst wrappers_js_1 = require(\"./wkt/wrappers.js\");\n// bootstrap-inject google.protobuf.Edition.EDITION_PROTO3: const $name: Edition.$localName = $number;\nconst EDITION_PROTO3 = 999;\n// bootstrap-inject google.protobuf.Edition.EDITION_PROTO2: const $name: Edition.$localName = $number;\nconst EDITION_PROTO2 = 998;\n// bootstrap-inject google.protobuf.FeatureSet.FieldPresence.IMPLICIT: const $name: FeatureSet_FieldPresence.$localName = $number;\nconst IMPLICIT = 2;\n/**\n * Create a new message instance.\n *\n * The second argument is an optional initializer object, where all fields are\n * optional.\n */\nfunction create(schema, init) {\n    if ((0, is_message_js_1.isMessage)(init, schema)) {\n        return init;\n    }\n    const message = createZeroMessage(schema);\n    if (init !== undefined) {\n        initMessage(schema, message, init);\n    }\n    return message;\n}\n/**\n * Sets field values from a MessageInitShape on a zero message.\n */\nfunction initMessage(messageDesc, message, init) {\n    for (const member of messageDesc.members) {\n        let value = init[member.localName];\n        if (value == null) {\n            // intentionally ignore undefined and null\n            continue;\n        }\n        let field;\n        if (member.kind == \"oneof\") {\n            const oneofField = (0, unsafe_js_1.unsafeOneofCase)(init, member);\n            if (!oneofField) {\n                continue;\n            }\n            field = oneofField;\n            value = (0, unsafe_js_1.unsafeGet)(init, oneofField);\n        }\n        else {\n            field = member;\n        }\n        // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check -- no need to convert enum\n        switch (field.fieldKind) {\n            case \"message\":\n                value = toMessage(field, value);\n                break;\n            case \"scalar\":\n                value = initScalar(field, value);\n                break;\n            case \"list\":\n                value = initList(field, value);\n                break;\n            case \"map\":\n                value = initMap(field, value);\n                break;\n        }\n        (0, unsafe_js_1.unsafeSet)(message, field, value);\n    }\n    return message;\n}\nfunction initScalar(field, value) {\n    if (field.scalar == descriptors_js_1.ScalarType.BYTES) {\n        return toU8Arr(value);\n    }\n    return value;\n}\nfunction initMap(field, value) {\n    if ((0, guard_js_1.isObject)(value)) {\n        if (field.scalar == descriptors_js_1.ScalarType.BYTES) {\n            return convertObjectValues(value, toU8Arr);\n        }\n        if (field.mapKind == \"message\") {\n            return convertObjectValues(value, (val) => toMessage(field, val));\n        }\n    }\n    return value;\n}\nfunction initList(field, value) {\n    if (Array.isArray(value)) {\n        if (field.scalar == descriptors_js_1.ScalarType.BYTES) {\n            return value.map(toU8Arr);\n        }\n        if (field.listKind == \"message\") {\n            return value.map((item) => toMessage(field, item));\n        }\n    }\n    return value;\n}\nfunction toMessage(field, value) {\n    if (field.fieldKind == \"message\" &&\n        !field.oneof &&\n        (0, wrappers_js_1.isWrapperDesc)(field.message)) {\n        // Types from google/protobuf/wrappers.proto are unwrapped when used in\n        // a singular field that is not part of a oneof group.\n        return initScalar(field.message.fields[0], value);\n    }\n    if ((0, guard_js_1.isObject)(value)) {\n        if (field.message.typeName == \"google.protobuf.Struct\" &&\n            field.parent.typeName !== \"google.protobuf.Value\") {\n            // google.protobuf.Struct is represented with JsonObject when used in a\n            // field, except when used in google.protobuf.Value.\n            return value;\n        }\n        if (!(0, is_message_js_1.isMessage)(value, field.message)) {\n            return create(field.message, value);\n        }\n    }\n    return value;\n}\n// converts any ArrayLike<number> to Uint8Array if necessary.\nfunction toU8Arr(value) {\n    return Array.isArray(value) ? new Uint8Array(value) : value;\n}\nfunction convertObjectValues(obj, fn) {\n    const ret = {};\n    for (const entry of Object.entries(obj)) {\n        ret[entry[0]] = fn(entry[1]);\n    }\n    return ret;\n}\nconst tokenZeroMessageField = Symbol();\nconst messagePrototypes = new WeakMap();\n/**\n * Create a zero message.\n */\nfunction createZeroMessage(desc) {\n    let msg;\n    if (!needsPrototypeChain(desc)) {\n        msg = {\n            $typeName: desc.typeName,\n        };\n        for (const member of desc.members) {\n            if (member.kind == \"oneof\" || member.presence == IMPLICIT) {\n                msg[member.localName] = createZeroField(member);\n            }\n        }\n    }\n    else {\n        // Support default values and track presence via the prototype chain\n        const cached = messagePrototypes.get(desc);\n        let prototype;\n        let members;\n        if (cached) {\n            ({ prototype, members } = cached);\n        }\n        else {\n            prototype = {};\n            members = new Set();\n            for (const member of desc.members) {\n                if (member.kind == \"oneof\") {\n                    // we can only put immutable values on the prototype,\n                    // oneof ADTs are mutable\n                    continue;\n                }\n                if (member.fieldKind != \"scalar\" && member.fieldKind != \"enum\") {\n                    // only scalar and enum values are immutable, map, list, and message\n                    // are not\n                    continue;\n                }\n                if (member.presence == IMPLICIT) {\n                    // implicit presence tracks field presence by zero values - e.g. 0, false, \"\", are unset, 1, true, \"x\" are set.\n                    // message, map, list fields are mutable, and also have IMPLICIT presence.\n                    continue;\n                }\n                members.add(member);\n                prototype[member.localName] = createZeroField(member);\n            }\n            messagePrototypes.set(desc, { prototype, members });\n        }\n        msg = Object.create(prototype);\n        msg.$typeName = desc.typeName;\n        for (const member of desc.members) {\n            if (members.has(member)) {\n                continue;\n            }\n            if (member.kind == \"field\") {\n                if (member.fieldKind == \"message\") {\n                    continue;\n                }\n                if (member.fieldKind == \"scalar\" || member.fieldKind == \"enum\") {\n                    if (member.presence != IMPLICIT) {\n                        continue;\n                    }\n                }\n            }\n            msg[member.localName] = createZeroField(member);\n        }\n    }\n    return msg;\n}\n/**\n * Do we need the prototype chain to track field presence?\n */\nfunction needsPrototypeChain(desc) {\n    switch (desc.file.edition) {\n        case EDITION_PROTO3:\n            // proto3 always uses implicit presence, we never need the prototype chain.\n            return false;\n        case EDITION_PROTO2:\n            // proto2 never uses implicit presence, we always need the prototype chain.\n            return true;\n        default:\n            // If a message uses scalar or enum fields with explicit presence, we need\n            // the prototype chain to track presence. This rule does not apply to fields\n            // in a oneof group - they use a different mechanism to track presence.\n            return desc.fields.some((f) => f.presence != IMPLICIT && f.fieldKind != \"message\" && !f.oneof);\n    }\n}\n/**\n * Returns a zero value for oneof groups, and for every field kind except\n * messages. Scalar and enum fields can have default values.\n */\nfunction createZeroField(field) {\n    if (field.kind == \"oneof\") {\n        return { case: undefined };\n    }\n    if (field.fieldKind == \"list\") {\n        return [];\n    }\n    if (field.fieldKind == \"map\") {\n        return {}; // Object.create(null) would be desirable here, but is unsupported by react https://react.dev/reference/react/use-server#serializable-parameters-and-return-values\n    }\n    if (field.fieldKind == \"message\") {\n        return tokenZeroMessageField;\n    }\n    const defaultValue = field.getDefaultValue();\n    if (defaultValue !== undefined) {\n        return field.fieldKind == \"scalar\" && field.longAsString\n            ? defaultValue.toString()\n            : defaultValue;\n    }\n    return field.fieldKind == \"scalar\"\n        ? (0, scalar_js_1.scalarZeroValue)(field.scalar, field.longAsString)\n        : field.enum.values[0].number;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2325, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2330, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/duzur/Downloads/Voxindiav3/node_modules/%40bufbuild/protobuf/dist/cjs/reflect/reflect.js"],"sourcesContent":["\"use strict\";\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.reflect = reflect;\nexports.reflectList = reflectList;\nexports.reflectMap = reflectMap;\nconst descriptors_js_1 = require(\"../descriptors.js\");\nconst reflect_check_js_1 = require(\"./reflect-check.js\");\nconst error_js_1 = require(\"./error.js\");\nconst unsafe_js_1 = require(\"./unsafe.js\");\nconst create_js_1 = require(\"../create.js\");\nconst wrappers_js_1 = require(\"../wkt/wrappers.js\");\nconst scalar_js_1 = require(\"./scalar.js\");\nconst proto_int64_js_1 = require(\"../proto-int64.js\");\nconst guard_js_1 = require(\"./guard.js\");\n/**\n * Create a ReflectMessage.\n */\nfunction reflect(messageDesc, message, \n/**\n * By default, field values are validated when setting them. For example,\n * a value for an uint32 field must be a ECMAScript Number >= 0.\n *\n * When field values are trusted, performance can be improved by disabling\n * checks.\n */\ncheck = true) {\n    return new ReflectMessageImpl(messageDesc, message, check);\n}\nclass ReflectMessageImpl {\n    get sortedFields() {\n        var _a;\n        return ((_a = this._sortedFields) !== null && _a !== void 0 ? _a : (this._sortedFields = this.desc.fields\n            .concat()\n            .sort((a, b) => a.number - b.number)));\n    }\n    constructor(messageDesc, message, check = true) {\n        this.lists = new Map();\n        this.maps = new Map();\n        this.check = check;\n        this.desc = messageDesc;\n        this.message = this[unsafe_js_1.unsafeLocal] = message !== null && message !== void 0 ? message : (0, create_js_1.create)(messageDesc);\n        this.fields = messageDesc.fields;\n        this.oneofs = messageDesc.oneofs;\n        this.members = messageDesc.members;\n    }\n    findNumber(number) {\n        if (!this._fieldsByNumber) {\n            this._fieldsByNumber = new Map(this.desc.fields.map((f) => [f.number, f]));\n        }\n        return this._fieldsByNumber.get(number);\n    }\n    oneofCase(oneof) {\n        assertOwn(this.message, oneof);\n        return (0, unsafe_js_1.unsafeOneofCase)(this.message, oneof);\n    }\n    isSet(field) {\n        assertOwn(this.message, field);\n        return (0, unsafe_js_1.unsafeIsSet)(this.message, field);\n    }\n    clear(field) {\n        assertOwn(this.message, field);\n        (0, unsafe_js_1.unsafeClear)(this.message, field);\n    }\n    get(field) {\n        assertOwn(this.message, field);\n        const value = (0, unsafe_js_1.unsafeGet)(this.message, field);\n        switch (field.fieldKind) {\n            case \"list\":\n                // eslint-disable-next-line no-case-declarations\n                let list = this.lists.get(field);\n                if (!list || list[unsafe_js_1.unsafeLocal] !== value) {\n                    this.lists.set(field, (list = new ReflectListImpl(field, value, this.check)));\n                }\n                return list;\n            case \"map\":\n                // eslint-disable-next-line no-case-declarations\n                let map = this.maps.get(field);\n                if (!map || map[unsafe_js_1.unsafeLocal] !== value) {\n                    this.maps.set(field, (map = new ReflectMapImpl(field, value, this.check)));\n                }\n                return map;\n            case \"message\":\n                return messageToReflect(field, value, this.check);\n            case \"scalar\":\n                return (value === undefined\n                    ? (0, scalar_js_1.scalarZeroValue)(field.scalar, false)\n                    : longToReflect(field, value));\n            case \"enum\":\n                return (value !== null && value !== void 0 ? value : field.enum.values[0].number);\n        }\n    }\n    set(field, value) {\n        assertOwn(this.message, field);\n        if (this.check) {\n            const err = (0, reflect_check_js_1.checkField)(field, value);\n            if (err) {\n                throw err;\n            }\n        }\n        let local;\n        if (field.fieldKind == \"message\") {\n            local = messageToLocal(field, value);\n        }\n        else if ((0, guard_js_1.isReflectMap)(value) || (0, guard_js_1.isReflectList)(value)) {\n            local = value[unsafe_js_1.unsafeLocal];\n        }\n        else {\n            local = longToLocal(field, value);\n        }\n        (0, unsafe_js_1.unsafeSet)(this.message, field, local);\n    }\n    getUnknown() {\n        return this.message.$unknown;\n    }\n    setUnknown(value) {\n        this.message.$unknown = value;\n    }\n}\nfunction assertOwn(owner, member) {\n    if (member.parent.typeName !== owner.$typeName) {\n        throw new error_js_1.FieldError(member, `cannot use ${member.toString()} with message ${owner.$typeName}`, \"ForeignFieldError\");\n    }\n}\n/**\n * Create a ReflectList.\n */\nfunction reflectList(field, unsafeInput, \n/**\n * By default, field values are validated when setting them. For example,\n * a value for an uint32 field must be a ECMAScript Number >= 0.\n *\n * When field values are trusted, performance can be improved by disabling\n * checks.\n */\ncheck = true) {\n    return new ReflectListImpl(field, unsafeInput !== null && unsafeInput !== void 0 ? unsafeInput : [], check);\n}\nclass ReflectListImpl {\n    field() {\n        return this._field;\n    }\n    get size() {\n        return this._arr.length;\n    }\n    constructor(field, unsafeInput, check) {\n        this._field = field;\n        this._arr = this[unsafe_js_1.unsafeLocal] = unsafeInput;\n        this.check = check;\n    }\n    get(index) {\n        const item = this._arr[index];\n        return item === undefined\n            ? undefined\n            : listItemToReflect(this._field, item, this.check);\n    }\n    set(index, item) {\n        if (index < 0 || index >= this._arr.length) {\n            throw new error_js_1.FieldError(this._field, `list item #${index + 1}: out of range`);\n        }\n        if (this.check) {\n            const err = (0, reflect_check_js_1.checkListItem)(this._field, index, item);\n            if (err) {\n                throw err;\n            }\n        }\n        this._arr[index] = listItemToLocal(this._field, item);\n    }\n    add(item) {\n        if (this.check) {\n            const err = (0, reflect_check_js_1.checkListItem)(this._field, this._arr.length, item);\n            if (err) {\n                throw err;\n            }\n        }\n        this._arr.push(listItemToLocal(this._field, item));\n        return undefined;\n    }\n    clear() {\n        this._arr.splice(0, this._arr.length);\n    }\n    [Symbol.iterator]() {\n        return this.values();\n    }\n    keys() {\n        return this._arr.keys();\n    }\n    *values() {\n        for (const item of this._arr) {\n            yield listItemToReflect(this._field, item, this.check);\n        }\n    }\n    *entries() {\n        for (let i = 0; i < this._arr.length; i++) {\n            yield [i, listItemToReflect(this._field, this._arr[i], this.check)];\n        }\n    }\n}\n/**\n * Create a ReflectMap.\n */\nfunction reflectMap(field, unsafeInput, \n/**\n * By default, field values are validated when setting them. For example,\n * a value for an uint32 field must be a ECMAScript Number >= 0.\n *\n * When field values are trusted, performance can be improved by disabling\n * checks.\n */\ncheck = true) {\n    return new ReflectMapImpl(field, unsafeInput, check);\n}\nclass ReflectMapImpl {\n    constructor(field, unsafeInput, check = true) {\n        this.obj = this[unsafe_js_1.unsafeLocal] = unsafeInput !== null && unsafeInput !== void 0 ? unsafeInput : {};\n        this.check = check;\n        this._field = field;\n    }\n    field() {\n        return this._field;\n    }\n    set(key, value) {\n        if (this.check) {\n            const err = (0, reflect_check_js_1.checkMapEntry)(this._field, key, value);\n            if (err) {\n                throw err;\n            }\n        }\n        this.obj[mapKeyToLocal(key)] = mapValueToLocal(this._field, value);\n        return this;\n    }\n    delete(key) {\n        const k = mapKeyToLocal(key);\n        const has = Object.prototype.hasOwnProperty.call(this.obj, k);\n        if (has) {\n            delete this.obj[k];\n        }\n        return has;\n    }\n    clear() {\n        for (const key of Object.keys(this.obj)) {\n            delete this.obj[key];\n        }\n    }\n    get(key) {\n        let val = this.obj[mapKeyToLocal(key)];\n        if (val !== undefined) {\n            val = mapValueToReflect(this._field, val, this.check);\n        }\n        return val;\n    }\n    has(key) {\n        return Object.prototype.hasOwnProperty.call(this.obj, mapKeyToLocal(key));\n    }\n    *keys() {\n        for (const objKey of Object.keys(this.obj)) {\n            yield mapKeyToReflect(objKey, this._field.mapKey);\n        }\n    }\n    *entries() {\n        for (const objEntry of Object.entries(this.obj)) {\n            yield [\n                mapKeyToReflect(objEntry[0], this._field.mapKey),\n                mapValueToReflect(this._field, objEntry[1], this.check),\n            ];\n        }\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n    get size() {\n        return Object.keys(this.obj).length;\n    }\n    *values() {\n        for (const val of Object.values(this.obj)) {\n            yield mapValueToReflect(this._field, val, this.check);\n        }\n    }\n    forEach(callbackfn, thisArg) {\n        for (const mapEntry of this.entries()) {\n            callbackfn.call(thisArg, mapEntry[1], mapEntry[0], this);\n        }\n    }\n}\nfunction messageToLocal(field, value) {\n    if (!(0, guard_js_1.isReflectMessage)(value)) {\n        return value;\n    }\n    if ((0, wrappers_js_1.isWrapper)(value.message) &&\n        !field.oneof &&\n        field.fieldKind == \"message\") {\n        // Types from google/protobuf/wrappers.proto are unwrapped when used in\n        // a singular field that is not part of a oneof group.\n        return value.message.value;\n    }\n    if (value.desc.typeName == \"google.protobuf.Struct\" &&\n        field.parent.typeName != \"google.protobuf.Value\") {\n        // google.protobuf.Struct is represented with JsonObject when used in a\n        // field, except when used in google.protobuf.Value.\n        return wktStructToLocal(value.message);\n    }\n    return value.message;\n}\nfunction messageToReflect(field, value, check) {\n    if (value !== undefined) {\n        if ((0, wrappers_js_1.isWrapperDesc)(field.message) &&\n            !field.oneof &&\n            field.fieldKind == \"message\") {\n            // Types from google/protobuf/wrappers.proto are unwrapped when used in\n            // a singular field that is not part of a oneof group.\n            value = {\n                $typeName: field.message.typeName,\n                value: longToReflect(field.message.fields[0], value),\n            };\n        }\n        else if (field.message.typeName == \"google.protobuf.Struct\" &&\n            field.parent.typeName != \"google.protobuf.Value\" &&\n            (0, guard_js_1.isObject)(value)) {\n            // google.protobuf.Struct is represented with JsonObject when used in a\n            // field, except when used in google.protobuf.Value.\n            value = wktStructToReflect(value);\n        }\n    }\n    return new ReflectMessageImpl(field.message, value, check);\n}\nfunction listItemToLocal(field, value) {\n    if (field.listKind == \"message\") {\n        return messageToLocal(field, value);\n    }\n    return longToLocal(field, value);\n}\nfunction listItemToReflect(field, value, check) {\n    if (field.listKind == \"message\") {\n        return messageToReflect(field, value, check);\n    }\n    return longToReflect(field, value);\n}\nfunction mapValueToLocal(field, value) {\n    if (field.mapKind == \"message\") {\n        return messageToLocal(field, value);\n    }\n    return longToLocal(field, value);\n}\nfunction mapValueToReflect(field, value, check) {\n    if (field.mapKind == \"message\") {\n        return messageToReflect(field, value, check);\n    }\n    return value;\n}\nfunction mapKeyToLocal(key) {\n    return typeof key == \"string\" || typeof key == \"number\" ? key : String(key);\n}\n/**\n * Converts a map key (any scalar value except float, double, or bytes) from its\n * representation in a message (string or number, the only possible object key\n * types) to the closest possible type in ECMAScript.\n */\nfunction mapKeyToReflect(key, type) {\n    switch (type) {\n        case descriptors_js_1.ScalarType.STRING:\n            return key;\n        case descriptors_js_1.ScalarType.INT32:\n        case descriptors_js_1.ScalarType.FIXED32:\n        case descriptors_js_1.ScalarType.UINT32:\n        case descriptors_js_1.ScalarType.SFIXED32:\n        case descriptors_js_1.ScalarType.SINT32: {\n            const n = Number.parseInt(key);\n            if (Number.isFinite(n)) {\n                return n;\n            }\n            break;\n        }\n        case descriptors_js_1.ScalarType.BOOL:\n            switch (key) {\n                case \"true\":\n                    return true;\n                case \"false\":\n                    return false;\n            }\n            break;\n        case descriptors_js_1.ScalarType.UINT64:\n        case descriptors_js_1.ScalarType.FIXED64:\n            try {\n                return proto_int64_js_1.protoInt64.uParse(key);\n            }\n            catch (_a) {\n                //\n            }\n            break;\n        default:\n            // INT64, SFIXED64, SINT64\n            try {\n                return proto_int64_js_1.protoInt64.parse(key);\n            }\n            catch (_b) {\n                //\n            }\n            break;\n    }\n    return key;\n}\nfunction longToReflect(field, value) {\n    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check\n    switch (field.scalar) {\n        case descriptors_js_1.ScalarType.INT64:\n        case descriptors_js_1.ScalarType.SFIXED64:\n        case descriptors_js_1.ScalarType.SINT64:\n            if (\"longAsString\" in field &&\n                field.longAsString &&\n                typeof value == \"string\") {\n                value = proto_int64_js_1.protoInt64.parse(value);\n            }\n            break;\n        case descriptors_js_1.ScalarType.FIXED64:\n        case descriptors_js_1.ScalarType.UINT64:\n            if (\"longAsString\" in field &&\n                field.longAsString &&\n                typeof value == \"string\") {\n                value = proto_int64_js_1.protoInt64.uParse(value);\n            }\n            break;\n    }\n    return value;\n}\nfunction longToLocal(field, value) {\n    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check\n    switch (field.scalar) {\n        case descriptors_js_1.ScalarType.INT64:\n        case descriptors_js_1.ScalarType.SFIXED64:\n        case descriptors_js_1.ScalarType.SINT64:\n            if (\"longAsString\" in field && field.longAsString) {\n                value = String(value);\n            }\n            else if (typeof value == \"string\" || typeof value == \"number\") {\n                value = proto_int64_js_1.protoInt64.parse(value);\n            }\n            break;\n        case descriptors_js_1.ScalarType.FIXED64:\n        case descriptors_js_1.ScalarType.UINT64:\n            if (\"longAsString\" in field && field.longAsString) {\n                value = String(value);\n            }\n            else if (typeof value == \"string\" || typeof value == \"number\") {\n                value = proto_int64_js_1.protoInt64.uParse(value);\n            }\n            break;\n    }\n    return value;\n}\nfunction wktStructToReflect(json) {\n    const struct = {\n        $typeName: \"google.protobuf.Struct\",\n        fields: {},\n    };\n    if ((0, guard_js_1.isObject)(json)) {\n        for (const [k, v] of Object.entries(json)) {\n            struct.fields[k] = wktValueToReflect(v);\n        }\n    }\n    return struct;\n}\nfunction wktStructToLocal(val) {\n    const json = {};\n    for (const [k, v] of Object.entries(val.fields)) {\n        json[k] = wktValueToLocal(v);\n    }\n    return json;\n}\nfunction wktValueToLocal(val) {\n    switch (val.kind.case) {\n        case \"structValue\":\n            return wktStructToLocal(val.kind.value);\n        case \"listValue\":\n            return val.kind.value.values.map(wktValueToLocal);\n        case \"nullValue\":\n        case undefined:\n            return null;\n        default:\n            return val.kind.value;\n    }\n}\nfunction wktValueToReflect(json) {\n    const value = {\n        $typeName: \"google.protobuf.Value\",\n        kind: { case: undefined },\n    };\n    // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check -- invalid input is unselected kind\n    switch (typeof json) {\n        case \"number\":\n            value.kind = { case: \"numberValue\", value: json };\n            break;\n        case \"string\":\n            value.kind = { case: \"stringValue\", value: json };\n            break;\n        case \"boolean\":\n            value.kind = { case: \"boolValue\", value: json };\n            break;\n        case \"object\":\n            if (json === null) {\n                const nullValue = 0;\n                value.kind = { case: \"nullValue\", value: nullValue };\n            }\n            else if (Array.isArray(json)) {\n                const listValue = {\n                    $typeName: \"google.protobuf.ListValue\",\n                    values: [],\n                };\n                if (Array.isArray(json)) {\n                    for (const e of json) {\n                        listValue.values.push(wktValueToReflect(e));\n                    }\n                }\n                value.kind = {\n                    case: \"listValue\",\n                    value: listValue,\n                };\n            }\n            else {\n                value.kind = {\n                    case: \"structValue\",\n                    value: wktStructToReflect(json),\n                };\n            }\n            break;\n    }\n    return value;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2856, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2861, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/duzur/Downloads/Voxindiav3/node_modules/%40bufbuild/protobuf/dist/cjs/to-binary.js"],"sourcesContent":["\"use strict\";\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toBinary = toBinary;\nexports.writeField = writeField;\nconst reflect_js_1 = require(\"./reflect/reflect.js\");\nconst binary_encoding_js_1 = require(\"./wire/binary-encoding.js\");\nconst descriptors_js_1 = require(\"./descriptors.js\");\n// bootstrap-inject google.protobuf.FeatureSet.FieldPresence.LEGACY_REQUIRED: const $name: FeatureSet_FieldPresence.$localName = $number;\nconst LEGACY_REQUIRED = 3;\n// Default options for serializing binary data.\nconst writeDefaults = {\n    writeUnknownFields: true,\n};\nfunction makeWriteOptions(options) {\n    return options ? Object.assign(Object.assign({}, writeDefaults), options) : writeDefaults;\n}\nfunction toBinary(schema, message, options) {\n    return writeFields(new binary_encoding_js_1.BinaryWriter(), makeWriteOptions(options), (0, reflect_js_1.reflect)(schema, message)).finish();\n}\nfunction writeFields(writer, opts, msg) {\n    var _a;\n    for (const f of msg.sortedFields) {\n        if (!msg.isSet(f)) {\n            if (f.presence == LEGACY_REQUIRED) {\n                throw new Error(`cannot encode field ${msg.desc.typeName}.${f.name} to binary: required field not set`);\n            }\n            continue;\n        }\n        writeField(writer, opts, msg, f);\n    }\n    if (opts.writeUnknownFields) {\n        for (const { no, wireType, data } of (_a = msg.getUnknown()) !== null && _a !== void 0 ? _a : []) {\n            writer.tag(no, wireType).raw(data);\n        }\n    }\n    return writer;\n}\n/**\n * @private\n */\nfunction writeField(writer, opts, msg, field) {\n    var _a;\n    switch (field.fieldKind) {\n        case \"scalar\":\n        case \"enum\":\n            writeScalar(writer, (_a = field.scalar) !== null && _a !== void 0 ? _a : descriptors_js_1.ScalarType.INT32, field.number, msg.get(field));\n            break;\n        case \"list\":\n            writeListField(writer, opts, field, msg.get(field));\n            break;\n        case \"message\":\n            writeMessageField(writer, opts, field, msg.get(field));\n            break;\n        case \"map\":\n            for (const [key, val] of msg.get(field)) {\n                writeMapEntry(writer, opts, field, key, val);\n            }\n            break;\n    }\n}\nfunction writeScalar(writer, scalarType, fieldNo, value) {\n    writeScalarValue(writer.tag(fieldNo, writeTypeOfScalar(scalarType)), scalarType, value);\n}\nfunction writeMessageField(writer, opts, field, message) {\n    if (field.delimitedEncoding) {\n        writeFields(writer.tag(field.number, binary_encoding_js_1.WireType.StartGroup), opts, message).tag(field.number, binary_encoding_js_1.WireType.EndGroup);\n    }\n    else {\n        writeFields(writer.tag(field.number, binary_encoding_js_1.WireType.LengthDelimited).fork(), opts, message).join();\n    }\n}\nfunction writeListField(writer, opts, field, list) {\n    var _a;\n    if (field.listKind == \"message\") {\n        for (const item of list) {\n            writeMessageField(writer, opts, field, item);\n        }\n        return;\n    }\n    const scalarType = (_a = field.scalar) !== null && _a !== void 0 ? _a : descriptors_js_1.ScalarType.INT32;\n    if (field.packed) {\n        if (!list.size) {\n            return;\n        }\n        writer.tag(field.number, binary_encoding_js_1.WireType.LengthDelimited).fork();\n        for (const item of list) {\n            writeScalarValue(writer, scalarType, item);\n        }\n        writer.join();\n        return;\n    }\n    for (const item of list) {\n        writeScalar(writer, scalarType, field.number, item);\n    }\n}\nfunction writeMapEntry(writer, opts, field, key, value) {\n    var _a;\n    writer.tag(field.number, binary_encoding_js_1.WireType.LengthDelimited).fork();\n    // write key, expecting key field number = 1\n    writeScalar(writer, field.mapKey, 1, key);\n    // write value, expecting value field number = 2\n    switch (field.mapKind) {\n        case \"scalar\":\n        case \"enum\":\n            writeScalar(writer, (_a = field.scalar) !== null && _a !== void 0 ? _a : descriptors_js_1.ScalarType.INT32, 2, value);\n            break;\n        case \"message\":\n            writeFields(writer.tag(2, binary_encoding_js_1.WireType.LengthDelimited).fork(), opts, value).join();\n            break;\n    }\n    writer.join();\n}\nfunction writeScalarValue(writer, type, value) {\n    switch (type) {\n        case descriptors_js_1.ScalarType.STRING:\n            writer.string(value);\n            break;\n        case descriptors_js_1.ScalarType.BOOL:\n            writer.bool(value);\n            break;\n        case descriptors_js_1.ScalarType.DOUBLE:\n            writer.double(value);\n            break;\n        case descriptors_js_1.ScalarType.FLOAT:\n            writer.float(value);\n            break;\n        case descriptors_js_1.ScalarType.INT32:\n            writer.int32(value);\n            break;\n        case descriptors_js_1.ScalarType.INT64:\n            writer.int64(value);\n            break;\n        case descriptors_js_1.ScalarType.UINT64:\n            writer.uint64(value);\n            break;\n        case descriptors_js_1.ScalarType.FIXED64:\n            writer.fixed64(value);\n            break;\n        case descriptors_js_1.ScalarType.BYTES:\n            writer.bytes(value);\n            break;\n        case descriptors_js_1.ScalarType.FIXED32:\n            writer.fixed32(value);\n            break;\n        case descriptors_js_1.ScalarType.SFIXED32:\n            writer.sfixed32(value);\n            break;\n        case descriptors_js_1.ScalarType.SFIXED64:\n            writer.sfixed64(value);\n            break;\n        case descriptors_js_1.ScalarType.SINT64:\n            writer.sint64(value);\n            break;\n        case descriptors_js_1.ScalarType.UINT32:\n            writer.uint32(value);\n            break;\n        case descriptors_js_1.ScalarType.SINT32:\n            writer.sint32(value);\n            break;\n    }\n}\nfunction writeTypeOfScalar(type) {\n    switch (type) {\n        case descriptors_js_1.ScalarType.BYTES:\n        case descriptors_js_1.ScalarType.STRING:\n            return binary_encoding_js_1.WireType.LengthDelimited;\n        case descriptors_js_1.ScalarType.DOUBLE:\n        case descriptors_js_1.ScalarType.FIXED64:\n        case descriptors_js_1.ScalarType.SFIXED64:\n            return binary_encoding_js_1.WireType.Bit64;\n        case descriptors_js_1.ScalarType.FIXED32:\n        case descriptors_js_1.ScalarType.SFIXED32:\n        case descriptors_js_1.ScalarType.FLOAT:\n            return binary_encoding_js_1.WireType.Bit32;\n        default:\n            return binary_encoding_js_1.WireType.Varint;\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3052, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3057, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/duzur/Downloads/Voxindiav3/node_modules/%40bufbuild/protobuf/dist/cjs/from-binary.js"],"sourcesContent":["\"use strict\";\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromBinary = fromBinary;\nexports.mergeFromBinary = mergeFromBinary;\nexports.readField = readField;\nconst descriptors_js_1 = require(\"./descriptors.js\");\nconst scalar_js_1 = require(\"./reflect/scalar.js\");\nconst reflect_js_1 = require(\"./reflect/reflect.js\");\nconst binary_encoding_js_1 = require(\"./wire/binary-encoding.js\");\n// Default options for parsing binary data.\nconst readDefaults = {\n    readUnknownFields: true,\n};\nfunction makeReadOptions(options) {\n    return options ? Object.assign(Object.assign({}, readDefaults), options) : readDefaults;\n}\n/**\n * Parse serialized binary data.\n */\nfunction fromBinary(schema, bytes, options) {\n    const msg = (0, reflect_js_1.reflect)(schema, undefined, false);\n    readMessage(msg, new binary_encoding_js_1.BinaryReader(bytes), makeReadOptions(options), false, bytes.byteLength);\n    return msg.message;\n}\n/**\n * Parse from binary data, merging fields.\n *\n * Repeated fields are appended. Map entries are added, overwriting\n * existing keys.\n *\n * If a message field is already present, it will be merged with the\n * new data.\n */\nfunction mergeFromBinary(schema, target, bytes, options) {\n    readMessage((0, reflect_js_1.reflect)(schema, target, false), new binary_encoding_js_1.BinaryReader(bytes), makeReadOptions(options), false, bytes.byteLength);\n    return target;\n}\n/**\n * If `delimited` is false, read the length given in `lengthOrDelimitedFieldNo`.\n *\n * If `delimited` is true, read until an EndGroup tag. `lengthOrDelimitedFieldNo`\n * is the expected field number.\n *\n * @private\n */\nfunction readMessage(message, reader, options, delimited, lengthOrDelimitedFieldNo) {\n    var _a;\n    const end = delimited ? reader.len : reader.pos + lengthOrDelimitedFieldNo;\n    let fieldNo, wireType;\n    const unknownFields = (_a = message.getUnknown()) !== null && _a !== void 0 ? _a : [];\n    while (reader.pos < end) {\n        [fieldNo, wireType] = reader.tag();\n        if (delimited && wireType == binary_encoding_js_1.WireType.EndGroup) {\n            break;\n        }\n        const field = message.findNumber(fieldNo);\n        if (!field) {\n            const data = reader.skip(wireType, fieldNo);\n            if (options.readUnknownFields) {\n                unknownFields.push({ no: fieldNo, wireType, data });\n            }\n            continue;\n        }\n        readField(message, reader, field, wireType, options);\n    }\n    if (delimited) {\n        if (wireType != binary_encoding_js_1.WireType.EndGroup || fieldNo !== lengthOrDelimitedFieldNo) {\n            throw new Error(`invalid end group tag`);\n        }\n    }\n    if (unknownFields.length > 0) {\n        message.setUnknown(unknownFields);\n    }\n}\n/**\n * @private\n */\nfunction readField(message, reader, field, wireType, options) {\n    switch (field.fieldKind) {\n        case \"scalar\":\n            message.set(field, readScalar(reader, field.scalar));\n            break;\n        case \"enum\":\n            message.set(field, readScalar(reader, descriptors_js_1.ScalarType.INT32));\n            break;\n        case \"message\":\n            message.set(field, readMessageField(reader, options, field, message.get(field)));\n            break;\n        case \"list\":\n            readListField(reader, wireType, message.get(field), options);\n            break;\n        case \"map\":\n            readMapEntry(reader, message.get(field), options);\n            break;\n    }\n}\n// Read a map field, expecting key field = 1, value field = 2\nfunction readMapEntry(reader, map, options) {\n    const field = map.field();\n    let key, val;\n    const end = reader.pos + reader.uint32();\n    while (reader.pos < end) {\n        const [fieldNo] = reader.tag();\n        switch (fieldNo) {\n            case 1:\n                key = readScalar(reader, field.mapKey);\n                break;\n            case 2:\n                switch (field.mapKind) {\n                    case \"scalar\":\n                        val = readScalar(reader, field.scalar);\n                        break;\n                    case \"enum\":\n                        val = reader.int32();\n                        break;\n                    case \"message\":\n                        val = readMessageField(reader, options, field);\n                        break;\n                }\n                break;\n        }\n    }\n    if (key === undefined) {\n        key = (0, scalar_js_1.scalarZeroValue)(field.mapKey, false);\n    }\n    if (val === undefined) {\n        switch (field.mapKind) {\n            case \"scalar\":\n                val = (0, scalar_js_1.scalarZeroValue)(field.scalar, false);\n                break;\n            case \"enum\":\n                val = field.enum.values[0].number;\n                break;\n            case \"message\":\n                val = (0, reflect_js_1.reflect)(field.message, undefined, false);\n                break;\n        }\n    }\n    map.set(key, val);\n}\nfunction readListField(reader, wireType, list, options) {\n    var _a;\n    const field = list.field();\n    if (field.listKind === \"message\") {\n        list.add(readMessageField(reader, options, field));\n        return;\n    }\n    const scalarType = (_a = field.scalar) !== null && _a !== void 0 ? _a : descriptors_js_1.ScalarType.INT32;\n    const packed = wireType == binary_encoding_js_1.WireType.LengthDelimited &&\n        scalarType != descriptors_js_1.ScalarType.STRING &&\n        scalarType != descriptors_js_1.ScalarType.BYTES;\n    if (!packed) {\n        list.add(readScalar(reader, scalarType));\n        return;\n    }\n    const e = reader.uint32() + reader.pos;\n    while (reader.pos < e) {\n        list.add(readScalar(reader, scalarType));\n    }\n}\nfunction readMessageField(reader, options, field, mergeMessage) {\n    const delimited = field.delimitedEncoding;\n    const message = mergeMessage !== null && mergeMessage !== void 0 ? mergeMessage : (0, reflect_js_1.reflect)(field.message, undefined, false);\n    readMessage(message, reader, options, delimited, delimited ? field.number : reader.uint32());\n    return message;\n}\nfunction readScalar(reader, type) {\n    switch (type) {\n        case descriptors_js_1.ScalarType.STRING:\n            return reader.string();\n        case descriptors_js_1.ScalarType.BOOL:\n            return reader.bool();\n        case descriptors_js_1.ScalarType.DOUBLE:\n            return reader.double();\n        case descriptors_js_1.ScalarType.FLOAT:\n            return reader.float();\n        case descriptors_js_1.ScalarType.INT32:\n            return reader.int32();\n        case descriptors_js_1.ScalarType.INT64:\n            return reader.int64();\n        case descriptors_js_1.ScalarType.UINT64:\n            return reader.uint64();\n        case descriptors_js_1.ScalarType.FIXED64:\n            return reader.fixed64();\n        case descriptors_js_1.ScalarType.BYTES:\n            return reader.bytes();\n        case descriptors_js_1.ScalarType.FIXED32:\n            return reader.fixed32();\n        case descriptors_js_1.ScalarType.SFIXED32:\n            return reader.sfixed32();\n        case descriptors_js_1.ScalarType.SFIXED64:\n            return reader.sfixed64();\n        case descriptors_js_1.ScalarType.SINT64:\n            return reader.sint64();\n        case descriptors_js_1.ScalarType.UINT32:\n            return reader.uint32();\n        case descriptors_js_1.ScalarType.SINT32:\n            return reader.sint32();\n    }\n}\n"],"names":[],"mappings":"AAAA;AACA,6CAA6C;AAC7C,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;AACjC,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,QAAQ,UAAU,GAAG;AACrB,QAAQ,eAAe,GAAG;AAC1B,QAAQ,SAAS,GAAG;AACpB,MAAM;AACN,MAAM;AACN,MAAM;AACN,MAAM;AACN,2CAA2C;AAC3C,MAAM,eAAe;IACjB,mBAAmB;AACvB;AACA,SAAS,gBAAgB,OAAO;IAC5B,OAAO,UAAU,OAAO,MAAM,CAAC,OAAO,MAAM,CAAC,CAAC,GAAG,eAAe,WAAW;AAC/E;AACA;;CAEC,GACD,SAAS,WAAW,MAAM,EAAE,KAAK,EAAE,OAAO;IACtC,MAAM,MAAM,CAAC,GAAG,aAAa,OAAO,EAAE,QAAQ,WAAW;IACzD,YAAY,KAAK,IAAI,qBAAqB,YAAY,CAAC,QAAQ,gBAAgB,UAAU,OAAO,MAAM,UAAU;IAChH,OAAO,IAAI,OAAO;AACtB;AACA;;;;;;;;CAQC,GACD,SAAS,gBAAgB,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO;IACnD,YAAY,CAAC,GAAG,aAAa,OAAO,EAAE,QAAQ,QAAQ,QAAQ,IAAI,qBAAqB,YAAY,CAAC,QAAQ,gBAAgB,UAAU,OAAO,MAAM,UAAU;IAC7J,OAAO;AACX;AACA;;;;;;;CAOC,GACD,SAAS,YAAY,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,wBAAwB;IAC9E,IAAI;IACJ,MAAM,MAAM,YAAY,OAAO,GAAG,GAAG,OAAO,GAAG,GAAG;IAClD,IAAI,SAAS;IACb,MAAM,gBAAgB,CAAC,KAAK,QAAQ,UAAU,EAAE,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,EAAE;IACrF,MAAO,OAAO,GAAG,GAAG,IAAK;QACrB,CAAC,SAAS,SAAS,GAAG,OAAO,GAAG;QAChC,IAAI,aAAa,YAAY,qBAAqB,QAAQ,CAAC,QAAQ,EAAE;YACjE;QACJ;QACA,MAAM,QAAQ,QAAQ,UAAU,CAAC;QACjC,IAAI,CAAC,OAAO;YACR,MAAM,OAAO,OAAO,IAAI,CAAC,UAAU;YACnC,IAAI,QAAQ,iBAAiB,EAAE;gBAC3B,cAAc,IAAI,CAAC;oBAAE,IAAI;oBAAS;oBAAU;gBAAK;YACrD;YACA;QACJ;QACA,UAAU,SAAS,QAAQ,OAAO,UAAU;IAChD;IACA,IAAI,WAAW;QACX,IAAI,YAAY,qBAAqB,QAAQ,CAAC,QAAQ,IAAI,YAAY,0BAA0B;YAC5F,MAAM,IAAI,MAAM,CAAC,qBAAqB,CAAC;QAC3C;IACJ;IACA,IAAI,cAAc,MAAM,GAAG,GAAG;QAC1B,QAAQ,UAAU,CAAC;IACvB;AACJ;AACA;;CAEC,GACD,SAAS,UAAU,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO;IACxD,OAAQ,MAAM,SAAS;QACnB,KAAK;YACD,QAAQ,GAAG,CAAC,OAAO,WAAW,QAAQ,MAAM,MAAM;YAClD;QACJ,KAAK;YACD,QAAQ,GAAG,CAAC,OAAO,WAAW,QAAQ,iBAAiB,UAAU,CAAC,KAAK;YACvE;QACJ,KAAK;YACD,QAAQ,GAAG,CAAC,OAAO,iBAAiB,QAAQ,SAAS,OAAO,QAAQ,GAAG,CAAC;YACxE;QACJ,KAAK;YACD,cAAc,QAAQ,UAAU,QAAQ,GAAG,CAAC,QAAQ;YACpD;QACJ,KAAK;YACD,aAAa,QAAQ,QAAQ,GAAG,CAAC,QAAQ;YACzC;IACR;AACJ;AACA,6DAA6D;AAC7D,SAAS,aAAa,MAAM,EAAE,GAAG,EAAE,OAAO;IACtC,MAAM,QAAQ,IAAI,KAAK;IACvB,IAAI,KAAK;IACT,MAAM,MAAM,OAAO,GAAG,GAAG,OAAO,MAAM;IACtC,MAAO,OAAO,GAAG,GAAG,IAAK;QACrB,MAAM,CAAC,QAAQ,GAAG,OAAO,GAAG;QAC5B,OAAQ;YACJ,KAAK;gBACD,MAAM,WAAW,QAAQ,MAAM,MAAM;gBACrC;YACJ,KAAK;gBACD,OAAQ,MAAM,OAAO;oBACjB,KAAK;wBACD,MAAM,WAAW,QAAQ,MAAM,MAAM;wBACrC;oBACJ,KAAK;wBACD,MAAM,OAAO,KAAK;wBAClB;oBACJ,KAAK;wBACD,MAAM,iBAAiB,QAAQ,SAAS;wBACxC;gBACR;gBACA;QACR;IACJ;IACA,IAAI,QAAQ,WAAW;QACnB,MAAM,CAAC,GAAG,YAAY,eAAe,EAAE,MAAM,MAAM,EAAE;IACzD;IACA,IAAI,QAAQ,WAAW;QACnB,OAAQ,MAAM,OAAO;YACjB,KAAK;gBACD,MAAM,CAAC,GAAG,YAAY,eAAe,EAAE,MAAM,MAAM,EAAE;gBACrD;YACJ,KAAK;gBACD,MAAM,MAAM,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM;gBACjC;YACJ,KAAK;gBACD,MAAM,CAAC,GAAG,aAAa,OAAO,EAAE,MAAM,OAAO,EAAE,WAAW;gBAC1D;QACR;IACJ;IACA,IAAI,GAAG,CAAC,KAAK;AACjB;AACA,SAAS,cAAc,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO;IAClD,IAAI;IACJ,MAAM,QAAQ,KAAK,KAAK;IACxB,IAAI,MAAM,QAAQ,KAAK,WAAW;QAC9B,KAAK,GAAG,CAAC,iBAAiB,QAAQ,SAAS;QAC3C;IACJ;IACA,MAAM,aAAa,CAAC,KAAK,MAAM,MAAM,MAAM,QAAQ,OAAO,KAAK,IAAI,KAAK,iBAAiB,UAAU,CAAC,KAAK;IACzG,MAAM,SAAS,YAAY,qBAAqB,QAAQ,CAAC,eAAe,IACpE,cAAc,iBAAiB,UAAU,CAAC,MAAM,IAChD,cAAc,iBAAiB,UAAU,CAAC,KAAK;IACnD,IAAI,CAAC,QAAQ;QACT,KAAK,GAAG,CAAC,WAAW,QAAQ;QAC5B;IACJ;IACA,MAAM,IAAI,OAAO,MAAM,KAAK,OAAO,GAAG;IACtC,MAAO,OAAO,GAAG,GAAG,EAAG;QACnB,KAAK,GAAG,CAAC,WAAW,QAAQ;IAChC;AACJ;AACA,SAAS,iBAAiB,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,YAAY;IAC1D,MAAM,YAAY,MAAM,iBAAiB;IACzC,MAAM,UAAU,iBAAiB,QAAQ,iBAAiB,KAAK,IAAI,eAAe,CAAC,GAAG,aAAa,OAAO,EAAE,MAAM,OAAO,EAAE,WAAW;IACtI,YAAY,SAAS,QAAQ,SAAS,WAAW,YAAY,MAAM,MAAM,GAAG,OAAO,MAAM;IACzF,OAAO;AACX;AACA,SAAS,WAAW,MAAM,EAAE,IAAI;IAC5B,OAAQ;QACJ,KAAK,iBAAiB,UAAU,CAAC,MAAM;YACnC,OAAO,OAAO,MAAM;QACxB,KAAK,iBAAiB,UAAU,CAAC,IAAI;YACjC,OAAO,OAAO,IAAI;QACtB,KAAK,iBAAiB,UAAU,CAAC,MAAM;YACnC,OAAO,OAAO,MAAM;QACxB,KAAK,iBAAiB,UAAU,CAAC,KAAK;YAClC,OAAO,OAAO,KAAK;QACvB,KAAK,iBAAiB,UAAU,CAAC,KAAK;YAClC,OAAO,OAAO,KAAK;QACvB,KAAK,iBAAiB,UAAU,CAAC,KAAK;YAClC,OAAO,OAAO,KAAK;QACvB,KAAK,iBAAiB,UAAU,CAAC,MAAM;YACnC,OAAO,OAAO,MAAM;QACxB,KAAK,iBAAiB,UAAU,CAAC,OAAO;YACpC,OAAO,OAAO,OAAO;QACzB,KAAK,iBAAiB,UAAU,CAAC,KAAK;YAClC,OAAO,OAAO,KAAK;QACvB,KAAK,iBAAiB,UAAU,CAAC,OAAO;YACpC,OAAO,OAAO,OAAO;QACzB,KAAK,iBAAiB,UAAU,CAAC,QAAQ;YACrC,OAAO,OAAO,QAAQ;QAC1B,KAAK,iBAAiB,UAAU,CAAC,QAAQ;YACrC,OAAO,OAAO,QAAQ;QAC1B,KAAK,iBAAiB,UAAU,CAAC,MAAM;YACnC,OAAO,OAAO,MAAM;QACxB,KAAK,iBAAiB,UAAU,CAAC,MAAM;YACnC,OAAO,OAAO,MAAM;QACxB,KAAK,iBAAiB,UAAU,CAAC,MAAM;YACnC,OAAO,OAAO,MAAM;IAC5B;AACJ","ignoreList":[0]}},
    {"offset": {"line": 3270, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3275, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/duzur/Downloads/Voxindiav3/node_modules/%40bufbuild/protobuf/dist/cjs/wire/size-delimited.js"],"sourcesContent":["\"use strict\";\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nvar __await = (this && this.__await) || function (v) { return this instanceof __await ? (this.v = v, this) : new __await(v); }\nvar __asyncGenerator = (this && this.__asyncGenerator) || function (thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n    function fulfill(value) { resume(\"next\", value); }\n    function reject(value) { resume(\"throw\", value); }\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sizeDelimitedEncode = sizeDelimitedEncode;\nexports.sizeDelimitedDecodeStream = sizeDelimitedDecodeStream;\nexports.sizeDelimitedPeek = sizeDelimitedPeek;\nconst to_binary_js_1 = require(\"../to-binary.js\");\nconst binary_encoding_js_1 = require(\"./binary-encoding.js\");\nconst from_binary_js_1 = require(\"../from-binary.js\");\n/**\n * Serialize a message, prefixing it with its size.\n *\n * A size-delimited message is a varint size in bytes, followed by exactly\n * that many bytes of a message serialized with the binary format.\n *\n * This size-delimited format is compatible with other implementations.\n * For details, see https://github.com/protocolbuffers/protobuf/issues/10229\n */\nfunction sizeDelimitedEncode(messageDesc, message, options) {\n    const writer = new binary_encoding_js_1.BinaryWriter();\n    writer.bytes((0, to_binary_js_1.toBinary)(messageDesc, message, options));\n    return writer.finish();\n}\n/**\n * Parse a stream of size-delimited messages.\n *\n * A size-delimited message is a varint size in bytes, followed by exactly\n * that many bytes of a message serialized with the binary format.\n *\n * This size-delimited format is compatible with other implementations.\n * For details, see https://github.com/protocolbuffers/protobuf/issues/10229\n */\nfunction sizeDelimitedDecodeStream(messageDesc, iterable, options) {\n    return __asyncGenerator(this, arguments, function* sizeDelimitedDecodeStream_1() {\n        var _a, e_1, _b, _c;\n        // append chunk to buffer, returning updated buffer\n        function append(buffer, chunk) {\n            const n = new Uint8Array(buffer.byteLength + chunk.byteLength);\n            n.set(buffer);\n            n.set(chunk, buffer.length);\n            return n;\n        }\n        let buffer = new Uint8Array(0);\n        try {\n            for (var _d = true, iterable_1 = __asyncValues(iterable), iterable_1_1; iterable_1_1 = yield __await(iterable_1.next()), _a = iterable_1_1.done, !_a; _d = true) {\n                _c = iterable_1_1.value;\n                _d = false;\n                const chunk = _c;\n                buffer = append(buffer, chunk);\n                for (;;) {\n                    const size = sizeDelimitedPeek(buffer);\n                    if (size.eof) {\n                        // size is incomplete, buffer more data\n                        break;\n                    }\n                    if (size.offset + size.size > buffer.byteLength) {\n                        // message is incomplete, buffer more data\n                        break;\n                    }\n                    yield yield __await((0, from_binary_js_1.fromBinary)(messageDesc, buffer.subarray(size.offset, size.offset + size.size), options));\n                    buffer = buffer.subarray(size.offset + size.size);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (!_d && !_a && (_b = iterable_1.return)) yield __await(_b.call(iterable_1));\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        if (buffer.byteLength > 0) {\n            throw new Error(\"incomplete data\");\n        }\n    });\n}\n/**\n * Decodes the size from the given size-delimited message, which may be\n * incomplete.\n *\n * Returns an object with the following properties:\n * - size: The size of the delimited message in bytes\n * - offset: The offset in the given byte array where the message starts\n * - eof: true\n *\n * If the size-delimited data does not include all bytes of the varint size,\n * the following object is returned:\n * - size: null\n * - offset: null\n * - eof: false\n *\n * This function can be used to implement parsing of size-delimited messages\n * from a stream.\n */\nfunction sizeDelimitedPeek(data) {\n    const sizeEof = { eof: true, size: null, offset: null };\n    for (let i = 0; i < 10; i++) {\n        if (i > data.byteLength) {\n            return sizeEof;\n        }\n        if ((data[i] & 0x80) == 0) {\n            const reader = new binary_encoding_js_1.BinaryReader(data);\n            let size;\n            try {\n                size = reader.uint32();\n            }\n            catch (e) {\n                if (e instanceof RangeError) {\n                    return sizeEof;\n                }\n                throw e;\n            }\n            return {\n                eof: false,\n                size,\n                offset: reader.pos,\n            };\n        }\n    }\n    throw new Error(\"invalid varint\");\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3484, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3489, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/duzur/Downloads/Voxindiav3/node_modules/%40bufbuild/protobuf/dist/cjs/wire/index.js"],"sourcesContent":["\"use strict\";\n// Copyright 2021-2024 Buf Technologies, Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./binary-encoding.js\"), exports);\n__exportStar(require(\"./base64-encoding.js\"), exports);\n__exportStar(require(\"./text-encoding.js\"), exports);\n__exportStar(require(\"./text-format.js\"), exports);\n__exportStar(require(\"./size-delimited.js\"), exports);\n"],"names":[],"mappings":"AAAA;AACA,6CAA6C;AAC7C,EAAE;AACF,kEAAkE;AAClE,mEAAmE;AACnE,0CAA0C;AAC1C,EAAE;AACF,kDAAkD;AAClD,EAAE;AACF,sEAAsE;AACtE,oEAAoE;AACpE,2EAA2E;AAC3E,sEAAsE;AACtE,iCAAiC;AACjC,IAAI,kBAAkB,AAAC,IAAI,IAAI,IAAI,CAAC,eAAe,IAAK,CAAC,OAAO,MAAM,GAAI,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;IAC1F,IAAI,OAAO,WAAW,KAAK;IAC3B,IAAI,OAAO,OAAO,wBAAwB,CAAC,GAAG;IAC9C,IAAI,CAAC,QAAQ,CAAC,SAAS,OAAO,CAAC,EAAE,UAAU,GAAG,KAAK,QAAQ,IAAI,KAAK,YAAY,GAAG;QACjF,OAAO;YAAE,YAAY;YAAM,KAAK;gBAAa,OAAO,CAAC,CAAC,EAAE;YAAE;QAAE;IAC9D;IACA,OAAO,cAAc,CAAC,GAAG,IAAI;AACjC,IAAM,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;IACtB,IAAI,OAAO,WAAW,KAAK;IAC3B,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,EAAE;AAChB,CAAE;AACF,IAAI,eAAe,AAAC,IAAI,IAAI,IAAI,CAAC,YAAY,IAAK,SAAS,CAAC,EAAE,QAAO;IACjE,IAAK,IAAI,KAAK,EAAG,IAAI,MAAM,aAAa,CAAC,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,UAAS,IAAI,gBAAgB,UAAS,GAAG;AAC3H;AACA,OAAO,cAAc,CAAC,SAAS,cAAc;IAAE,OAAO;AAAK;AAC3D,2IAA8C;AAC9C,2IAA8C;AAC9C,yIAA4C;AAC5C,uIAA0C;AAC1C,0IAA6C","ignoreList":[0]}},
    {"offset": {"line": 3530, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}