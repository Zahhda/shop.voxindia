{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/rajab/OneDrive/Desktop/Voxindia/Voxindia/context/AppContext.jsx"],"sourcesContent":["'use client'\r\nimport { useAuth, useUser } from \"@clerk/nextjs\";\r\nimport axios from \"axios\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { createContext, useContext, useEffect, useState } from \"react\";\r\nimport toast from \"react-hot-toast\";\r\n\r\nexport const AppContext = createContext();\r\n\r\nexport const useAppContext = () => {\r\n    return useContext(AppContext)\r\n}\r\n\r\nexport const AppContextProvider = (props) => {\r\n\r\n    const currency = process.env.NEXT_PUBLIC_CURRENCY\r\n    const router = useRouter()\r\n\r\n    const { user } = useUser()\r\n    const { getToken } = useAuth()\r\n\r\n    const [products, setProducts] = useState([])\r\n    const [userData, setUserData] = useState(false)\r\n    const [isSeller, setIsSeller] = useState(false)\r\n    const [cartItems, setCartItems] = useState({})\r\n\r\n    const fetchProductData = async () => {\r\n        try {\r\n            \r\n            const {data} = await axios.get('/api/product/list')\r\n\r\n            if (data.success) {\r\n                setProducts(data.products)\r\n            } else {\r\n                toast.error(data.message)\r\n            }\r\n\r\n        } catch (error) {\r\n            toast.error(error.message)\r\n        }\r\n    }\r\n\r\n    const fetchUserData = async () => {\r\n        try {\r\n\r\n            if (user.publicMetadata.role === 'seller') {\r\n                setIsSeller(true)\r\n            }\r\n\r\n            const token = await getToken()\r\n\r\n            const { data } = await axios.get('/api/user/data', { headers: { Authorization: `Bearer ${token}` } })\r\n\r\n            if (data.success) {\r\n                setUserData(data.user)\r\n                setCartItems(data.user.cartItems)\r\n            } else {\r\n                toast.error(data.message)\r\n            }\r\n\r\n        } catch (error) {\r\n            toast.error(error.message)\r\n        }\r\n    }\r\n\r\n    const addToCart = async (itemId) => {\r\n\r\n        if (!user) {\r\n            return toast('Please login',{\r\n                icon: '⚠️',\r\n              })\r\n        }\r\n\r\n        let cartData = structuredClone(cartItems);\r\n        if (cartData[itemId]) {\r\n            cartData[itemId] += 1;\r\n        }\r\n        else {\r\n            cartData[itemId] = 1;\r\n        }\r\n        setCartItems(cartData);\r\n        if (user) {\r\n            try {\r\n                const token = await getToken()\r\n                await axios.post('/api/cart/update', {cartData}, {headers:{Authorization: `Bearer ${token}`}} )\r\n                toast.success('Item added to cart')\r\n            } catch (error) {\r\n                toast.error(error.message)\r\n            }\r\n        }\r\n    }\r\n\r\n    const updateCartQuantity = async (itemId, quantity) => {\r\n\r\n        let cartData = structuredClone(cartItems);\r\n        if (quantity === 0) {\r\n            delete cartData[itemId];\r\n        } else {\r\n            cartData[itemId] = quantity;\r\n        }\r\n        setCartItems(cartData)\r\n        if (user) {\r\n            try {\r\n                const token = await getToken()\r\n                await axios.post('/api/cart/update', {cartData}, {headers:{Authorization: `Bearer ${token}`}} )\r\n                toast.success('Cart Updated')\r\n            } catch (error) {\r\n                toast.error(error.message)\r\n            }\r\n        }\r\n    }\r\n\r\n    const getCartCount = () => {\r\n        let totalCount = 0;\r\n        for (const items in cartItems) {\r\n            if (cartItems[items] > 0) {\r\n                totalCount += cartItems[items];\r\n            }\r\n        }\r\n        return totalCount;\r\n    }\r\n\r\n    const getCartAmount = () => {\r\n        let totalAmount = 0;\r\n        for (const items in cartItems) {\r\n            let itemInfo = products.find((product) => product._id === items);\r\n            if (cartItems[items] > 0) {\r\n                totalAmount += itemInfo.offerPrice * cartItems[items];\r\n            }\r\n        }\r\n        return Math.floor(totalAmount * 100) / 100;\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchProductData()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            fetchUserData()\r\n        }\r\n    }, [user])\r\n\r\n    const value = {\r\n        user, getToken,\r\n        currency, router,\r\n        isSeller, setIsSeller,\r\n        userData, fetchUserData,\r\n        products, fetchProductData,\r\n        cartItems, setCartItems,\r\n        addToCart, updateCartQuantity,\r\n        getCartCount, getCartAmount\r\n    }\r\n\r\n    return (\r\n        <AppContext.Provider value={value}>\r\n            {props.children}\r\n        </AppContext.Provider>\r\n    )\r\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 309, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}